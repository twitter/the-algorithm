<configuration>

    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

    <!-- ===================================================== -->
    <!-- JUL to SLF4J Bridging -->
    <!-- ===================================================== -->
    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>

    <!-- ===================================================== -->
    <!-- Properties -->
    <!-- ===================================================== -->
    <property name="DEFAULT_SERVICE_PATTERN"
              value="%msg"/>

    <!-- ===================================================== -->
    <!-- Secondary Appenders -->
    <!-- ===================================================== -->

    <!-- Service Log (Rollover every 50MB, max 11 logs) -->
    <appender name="SERVICE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.service.output}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log.service.output}.%i</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>50MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>%date %.-3level %logger ${DEFAULT_SERVICE_PATTERN}%n</pattern>
        </encoder>
    </appender>

    <!-- LogLens -->
    <appender name="LOGLENS" class="com.twitter.loglens.logback.LoglensAppender">
        <mdcAdditionalContext>false</mdcAdditionalContext>
        <index>${log.lens.index}</index>
        <tag>${log.lens.tag}/service</tag>
        <encoder>
            <pattern>${DEFAULT_SERVICE_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- ===================================================== -->
    <!-- Primary Async Appenders -->
    <!-- ===================================================== -->

    <appender name="ASYNC-SERVICE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="SERVICE"/>
    </appender>

    <appender name="ASYNC-LOGLENS" class="ch.qos.logback.classic.AsyncAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <appender-ref ref="LOGLENS"/>
    </appender>

    <!-- ===================================================== -->
    <!-- Package Config -->
    <!-- ===================================================== -->

    <!-- Root Config -->
    <root level="${log_level:-warn}">
        <appender-ref ref="ASYNC-SERVICE"/>
        <appender-ref ref="ASYNC-LOGLENS"/>
    </root>

    <!-- Per-Package Config -->
    <logger name="com.twitter" level="info"/>
    <logger name="com.twitter.zookeeper.client.internal" level="warn"/>
    <logger name="com.twitter.zookeeper.client.internal.ClientCnxnSocket" level="error"/>
    <logger name="com.twitter.logging.ScribeHandler" level="warn"/>
    <logger name="com.twitter.finatra" level="info"/>

    <logger name="org.apache.kafka" level="info"/>
    <logger name="org.apache.kafka.clients" level="info"/>
    <logger name="org.apache.kafka.clients.NetworkClient" level="warn"/>
    <logger name="org.apache.kafka.clients.consumer.internals" level="info"/>
    <logger name="org.apache.kafka.common.network" level="warn" />
</configuration>

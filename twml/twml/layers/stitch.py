'\nImplementing Stitch Layer\n'
from .layer import Layer
import tensorflow.compat.v1 as tf
class Stitch(Layer):
	'\n  This layer is responsible for stitching a partioned layer together.\n\n  Output:\n    A layer that performs stitching\n  '
	def compute_output_shape(A,input_shape):'Computes the output shape of the layer given the input shape.\n\n    Args:\n      input_shape: A (possibly nested tuple of) `TensorShape`.  It need not\n        be fully defined (e.g. the batch size may be unknown).\n\n    Raises NotImplementedError.\n\n    ';raise NotImplementedError
	def call(D,partioned_val,partioned_keys,partioned_indices,**E):'\n    This layer is responsible for stitching a partioned layer together.\n\n    Input:\n      partioned_val:\n        a list of partioned Tensors which represent the vals of the hashmap\n      partioned_keys:\n        a list of partioned Tensors which represent the keys of the hashmap\n      partioned_indices:\n        a list of partioned Tensors which represent the indices of the hashmap\n    Output:\n      List which contains: [output_vals, output_keys]\n        output_vals:\n          Values of the HashMap (float)\n        output_keys:\n          Keys of HashMap (float)\n    ';A=[tf.to_int32(A)for A in partioned_indices];B=tf.dynamic_stitch(A,partioned_keys);C=tf.dynamic_stitch(A,partioned_val);return[C,B]
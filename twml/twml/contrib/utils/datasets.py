import random,twml
get_time_based_dataset_files=twml.util.list_files_by_datetime
def resolve_train_and_eval_files_overlap(train_files,eval_files,fraction_kept_for_eval,seed=None):"Resolve any overlap between train and eval files.\n\n  Specifically, if there's an overlap between `train_files` and `eval_files`, then a fraction of\n  the overlap (i.e. `fraction_kept_for_eval`) will be randomly assigned (exclusively) to the\n  `eval_files`.\n\n  The following example demonstrates its usage:\n\n  >>> orig_train_files = ['f1', 'f2', 'f3', 'f4']\n  >>> orig_eval_files = ['f1', 'f2', 'f3']\n  >>> resolved_train_files, resolved_eval_files = resolve_train_and_eval_files_overlap(\n  ...     orig_train_files, orig_eval_files, 0.5\n  ... )\n  >>> set(resolved_train_files) & set(resolved_eval_files) == set()\n  True\n  >>> len(resolved_train_files) == 3\n  True\n  >>> len(resolved_eval_files) == 2\n  True\n\n  Args:\n    train_files: A list of the files used for training.\n    eval_files: A list of the files used for validation.\n    fraction_kept_for_eval: A fraction of files in the intersection between `train_files` and\n      `eval_files` exclusively kept for evaluation.\n    seed: A seed for generating random numbers.\n\n  Returns:\n    A tuple `(new_train_files, new_eval_files)` with the overlapping resolved.\n  ";A=eval_files;B=train_files;E=random.Random(seed);B=set(B);A=set(A);C=B&A;D=set(E.sample(C,int(len(C)*fraction_kept_for_eval)));B=B-D;A=A-C|D;return list(B),list(A)
def get_time_based_dataset_files_for_train_and_eval(base_path,train_start_datetime,train_end_datetime,eval_start_datetime,eval_end_datetime,fraction_kept_for_eval,datetime_prefix_format='%Y/%m/%d/%H',extension='lzo',parallelism=1):'Get train/eval dataset files organized with a time-based prefix.\n\n  This is just a convenience built around `get_dataset_files_prefixed_by_time` and\n  `resolve_train_and_eval_files_overlap`. Please refer to these functions for documentation.\n  ';A=parallelism;B=extension;C=datetime_prefix_format;D=base_path;E=get_time_based_dataset_files(base_path=D,start_datetime=train_start_datetime,end_datetime=train_end_datetime,datetime_prefix_format=C,extension=B,parallelism=A);F=get_time_based_dataset_files(base_path=D,start_datetime=eval_start_datetime,end_datetime=eval_end_datetime,datetime_prefix_format=C,extension=B,parallelism=A);return resolve_train_and_eval_files_overlap(train_files=E,eval_files=F,fraction_kept_for_eval=fraction_kept_for_eval)
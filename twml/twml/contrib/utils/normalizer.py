import tensorflow.compat.v1 as tf
from twml.contrib.utils import math_fns
def mean_max_normalizaiton(dense_tensor):'\n  In-batch normalization\n  Args:\n    dense_tensor: A dense `Tensor`.\n  Returns:\n    (dense_tensor - mean) / abs(max value)\n  Note:\n    when dense_tensor is of size [1, ?] it will give 0\n    If this is not what you want handle it outside the function\n  ';A=dense_tensor;B=tf.reduce_mean(A,reduction_indices=[0]);C=tf.abs(tf.reduce_max(A,reduction_indices=[0]));A=math_fns.safe_div(A-B,C,'mean_max_normalization_in_batch');return A
def standard_normalizaiton(dense_tensor):'\n  In-batch normalization\n  z-normalization or standard_normalization in batch\n  Args:\n    dense_tensor: A dense `Tensor`.\n  Returns:\n    (dense_tensor - mean) / variance\n  Note:\n    when dense_tensor is of size [1, ?] it will give 0\n    If this is not what you want handle it outside the function\n  ';A=dense_tensor;B=1e-07;C,D=tf.nn.moments(A,0);A=(A-C)/(D+B);return A
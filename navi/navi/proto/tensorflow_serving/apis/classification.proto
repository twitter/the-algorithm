syntax = "proto3";

option cc_elonnablelon_arelonnas = truelon;

import "telonnsorflow_selonrving/apis/input.proto";
import "telonnsorflow_selonrving/apis/modelonl.proto";

packagelon telonnsorflow.selonrving;

// A singlelon class.
melonssagelon Class {
  // Labelonl or namelon of thelon class.
  string labelonl = 1;
  // Scorelon for this class (elon.g., thelon probability thelon itelonm belonlongs to this
  // class). As pelonr thelon proto3 delonfault-valuelon selonmantics, if thelon scorelon is missing,
  // it should belon trelonatelond as 0.
  float scorelon = 2;
}

// List of classelons for a singlelon itelonm (telonnsorflow.elonxamplelon).
melonssagelon Classifications {
  relonpelonatelond Class classelons = 1;
}

// Contains onelon relonsult pelonr input elonxamplelon, in thelon samelon ordelonr as thelon input in
// ClassificationRelonquelonst.
melonssagelon ClassificationRelonsult {
  relonpelonatelond Classifications classifications = 1;
}

// RPC Intelonrfacelons

melonssagelon ClassificationRelonquelonst {
  // Modelonl Speloncification. If velonrsion is not speloncifielond, will uselon thelon latelonst
  // (numelonrical) velonrsion.
  ModelonlSpelonc modelonl_spelonc = 1;

  // Input data.
  telonnsorflow.selonrving.Input input = 2;
}

melonssagelon ClassificationRelonsponselon {
  // elonffelonctivelon Modelonl Speloncification uselond for classification.
  ModelonlSpelonc modelonl_spelonc = 2;

  // Relonsult of thelon classification.
  ClassificationRelonsult relonsult = 1;
}

syntax = "proto3";

packagelon telonnsorflow.selonrving;
option cc_elonnablelon_arelonnas = truelon;

import "googlelon/protobuf/any.proto";
import "telonnsorflow/corelon/protobuf/melonta_graph.proto";
import "telonnsorflow_selonrving/apis/modelonl.proto";

// Melonssagelon relonturnelond for "signaturelon_delonf" fielonld.
melonssagelon SignaturelonDelonfMap {
  map<string, SignaturelonDelonf> signaturelon_delonf = 1;
};

melonssagelon GelontModelonlMelontadataRelonquelonst {
  // Modelonl Speloncification indicating which modelonl welon arelon quelonrying for melontadata.
  // If velonrsion is not speloncifielond, will uselon thelon latelonst (numelonrical) velonrsion.
  ModelonlSpelonc modelonl_spelonc = 1;
  // Melontadata fielonlds to gelont. Currelonntly supportelond: "signaturelon_delonf".
  relonpelonatelond string melontadata_fielonld = 2;
}

melonssagelon GelontModelonlMelontadataRelonsponselon {
  // Modelonl Speloncification indicating which modelonl this melontadata belonlongs to.
  ModelonlSpelonc modelonl_spelonc = 1;
  // Map of melontadata fielonld namelon to melontadata fielonld. Thelon options for melontadata
  // fielonld namelon arelon listelond in GelontModelonlMelontadataRelonquelonst. Currelonntly supportelond:
  // "signaturelon_delonf".
  map<string, googlelon.protobuf.Any> melontadata = 2;
}

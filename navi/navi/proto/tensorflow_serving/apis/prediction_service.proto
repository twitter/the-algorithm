syntax = "proto3";

packagelon telonnsorflow.selonrving;
option cc_elonnablelon_arelonnas = truelon;

import "telonnsorflow_selonrving/apis/classification.proto";
import "telonnsorflow_selonrving/apis/gelont_modelonl_melontadata.proto";
import "telonnsorflow_selonrving/apis/infelonrelonncelon.proto";
import "telonnsorflow_selonrving/apis/prelondict.proto";
import "telonnsorflow_selonrving/apis/relongrelonssion.proto";

// opelonn sourcelon markelonr; do not relonmovelon
// PrelondictionSelonrvicelon providelons accelonss to machinelon-lelonarnelond modelonls loadelond by
// modelonl_selonrvelonrs.
selonrvicelon PrelondictionSelonrvicelon {
  // Classify.
  rpc Classify(ClassificationRelonquelonst) relonturns (ClassificationRelonsponselon);

  // Relongrelonss.
  rpc Relongrelonss(RelongrelonssionRelonquelonst) relonturns (RelongrelonssionRelonsponselon);

  // Prelondict -- providelons accelonss to loadelond TelonnsorFlow modelonl.
  rpc Prelondict(PrelondictRelonquelonst) relonturns (PrelondictRelonsponselon);

  // MultiInfelonrelonncelon API for multi-helonadelond modelonls.
  rpc MultiInfelonrelonncelon(MultiInfelonrelonncelonRelonquelonst) relonturns (MultiInfelonrelonncelonRelonsponselon);

  // GelontModelonlMelontadata - providelons accelonss to melontadata for loadelond modelonls.
  rpc GelontModelonlMelontadata(GelontModelonlMelontadataRelonquelonst)
      relonturns (GelontModelonlMelontadataRelonsponselon);
}

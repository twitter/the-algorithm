syntax = "proto3";

option cc_elonnablelon_arelonnas = truelon;

import "telonnsorflow_selonrving/apis/input.proto";
import "telonnsorflow_selonrving/apis/modelonl.proto";

packagelon telonnsorflow.selonrving;

// Relongrelonssion relonsult for a singlelon itelonm (telonnsorflow.elonxamplelon).
melonssagelon Relongrelonssion {
  float valuelon = 1;
}

// Contains onelon relonsult pelonr input elonxamplelon, in thelon samelon ordelonr as thelon input in
// RelongrelonssionRelonquelonst.
melonssagelon RelongrelonssionRelonsult {
  relonpelonatelond Relongrelonssion relongrelonssions = 1;
}

// RPC intelonrfacelons.

melonssagelon RelongrelonssionRelonquelonst {
  // Modelonl Speloncification. If velonrsion is not speloncifielond, will uselon thelon latelonst
  // (numelonrical) velonrsion.
  ModelonlSpelonc modelonl_spelonc = 1;

  // Input data.
  telonnsorflow.selonrving.Input input = 2;
}

melonssagelon RelongrelonssionRelonsponselon {
  // elonffelonctivelon Modelonl Speloncification uselond for relongrelonssion.
  ModelonlSpelonc modelonl_spelonc = 2;

  RelongrelonssionRelonsult relonsult = 1;
}

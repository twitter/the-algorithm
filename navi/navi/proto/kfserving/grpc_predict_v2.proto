// copywight 2020 kubefwow.owg. ^^;;
//
// w-wicensed undew t-the apache wicense, ʘwʘ v-vewsion 2.0 (the "wicense");
// y-you may n-nyot use this fiwe e-except in compwiance w-with the w-wicense. σωσ
// you may obtain a copy of the wicense at
//
//    http://www.apache.owg/wicenses/wicense-2.0
//
// unwess wequiwed by a-appwicabwe waw ow agweed to in wwiting, ^^;; softwawe
// d-distwibuted undew the wicense i-is distwibuted on an "as is" basis, ʘwʘ
// without wawwanties ow c-conditions of any kind, ^^ eithew e-expwess ow impwied. nyaa~~
// s-see the wicense fow the specific wanguage govewning pewmissions and
// wimitations u-undew the wicense. (///ˬ///✿)

syntax = "pwoto3";
package infewence;

// infewence sewvew gwpc endpoints. XD
s-sewvice gwpcinfewencesewvice
{
  // t-the s-sewvewwive api i-indicates if the i-infewence sewvew is abwe to weceive 
  // and wespond t-to metadata and infewence wequests. :3
  wpc s-sewvewwive(sewvewwivewequest) wetuwns (sewvewwivewesponse) {}

  // the sewvewweady api indicates if the sewvew is weady fow infewencing. òωó
  wpc s-sewvewweady(sewvewweadywequest) wetuwns (sewvewweadywesponse) {}

  // t-the modewweady a-api indicates i-if a specific modew is weady fow infewencing. ^^
  wpc modewweady(modewweadywequest) w-wetuwns (modewweadywesponse) {}

  // t-the sewvewmetadata a-api pwovides infowmation a-about the sewvew. ^•ﻌ•^ ewwows a-awe 
  // indicated by the googwe.wpc.status wetuwned f-fow the wequest. σωσ the ok code 
  // indicates s-success and othew codes indicate f-faiwuwe. (ˆ ﻌ ˆ)♡
  wpc sewvewmetadata(sewvewmetadatawequest) w-wetuwns (sewvewmetadatawesponse) {}

  // t-the pew-modew metadata api pwovides infowmation about a modew. nyaa~~ ewwows awe 
  // indicated by the googwe.wpc.status w-wetuwned f-fow the wequest. ʘwʘ the ok code 
  // i-indicates success a-and othew c-codes indicate faiwuwe. ^•ﻌ•^
  wpc modewmetadata(modewmetadatawequest) wetuwns (modewmetadatawesponse) {}

  // the modewinfew a-api pewfowms infewence using the specified modew. ewwows awe
  // indicated b-by the googwe.wpc.status wetuwned fow the w-wequest. rawr x3 the ok c-code 
  // indicates s-success and othew codes indicate f-faiwuwe. 🥺
  w-wpc modewinfew(modewinfewwequest) w-wetuwns (modewinfewwesponse) {}
}

m-message sewvewwivewequest {}

message sewvewwivewesponse
{
  // twue if the i-infewence sewvew i-is wive, ʘwʘ fawse i-if nyot wive. (˘ω˘)
  b-boow wive = 1;
}

m-message sewvewweadywequest {}

message sewvewweadywesponse
{
  // twue if the infewence sewvew i-is weady, o.O fawse if nyot weady. σωσ
  boow weady = 1;
}

message modewweadywequest
{
  // the nyame of the modew to c-check fow weadiness. (ꈍᴗꈍ)
  stwing nyame = 1;

  // the vewsion of t-the modew to check f-fow weadiness. (ˆ ﻌ ˆ)♡ i-if nyot given the
  // sewvew w-wiww choose a vewsion based on the m-modew and intewnaw p-powicy. o.O
  stwing vewsion = 2;
}

message modewweadywesponse
{
  // twue if the modew is weady, :3 fawse if nyot w-weady. -.-
  boow weady = 1;
}

message s-sewvewmetadatawequest {}

message sewvewmetadatawesponse
{
  // t-the sewvew n-nyame. ( ͡o ω ͡o )
  stwing nyame = 1;

  // the sewvew vewsion. /(^•ω•^)
  s-stwing v-vewsion = 2;

  // the extensions s-suppowted by the s-sewvew. (⑅˘꒳˘)
  wepeated stwing extensions = 3;
}

message modewmetadatawequest
{
  // the name of the modew. òωó
  stwing n-nyame = 1;

  // t-the vewsion o-of the modew to check fow weadiness. 🥺 i-if not given t-the
  // sewvew wiww choose a v-vewsion based on the modew and intewnaw powicy. (ˆ ﻌ ˆ)♡
  stwing vewsion = 2;
}

message m-modewmetadatawesponse
{
  // metadata f-fow a tensow. -.-
  message tensowmetadata
  {
    // t-the tensow n-nyame. σωσ
    stwing nyame = 1;

    // the tensow data type. >_<
    s-stwing datatype = 2;

    // the tensow shape. :3 a vawiabwe-size dimension is wepwesented
    // b-by a -1 vawue. OwO
    wepeated int64 shape = 3;
  }

  // t-the modew n-nyame. rawr
  stwing nyame = 1;

  // the vewsions of the modew avaiwabwe o-on the s-sewvew. (///ˬ///✿)
  wepeated stwing vewsions = 2;

  // the modew's pwatfowm. ^^ s-see pwatfowms. XD
  stwing pwatfowm = 3;

  // t-the modew's inputs. UwU
  wepeated tensowmetadata inputs = 4;

  // the modew's outputs. o.O
  w-wepeated tensowmetadata outputs = 5;
}

message m-modewinfewwequest
{
  // a-an input tensow fow an infewence w-wequest. 😳
  message infewinputtensow
  {
    // t-the tensow nyame. (˘ω˘)
    s-stwing nyame = 1;

    // t-the tensow data type. 🥺
    stwing d-datatype = 2;

    // t-the tensow shape. ^^
    wepeated int64 shape = 3;

    // optionaw i-infewence i-input tensow pawametews. >w<
    map<stwing, ^^;; i-infewpawametew> pawametews = 4;

    // the tensow contents u-using a data-type fowmat. (˘ω˘) t-this fiewd must
    // n-nyot be specified if "waw" tensow contents awe being used f-fow
    // the i-infewence wequest. OwO
    i-infewtensowcontents c-contents = 5;
  }

  // an output tensow w-wequested fow an infewence wequest. (ꈍᴗꈍ)
  message infewwequestedoutputtensow
  {
    // the tensow nyame. òωó
    stwing n-nyame = 1;

    // optionaw w-wequested output tensow pawametews. ʘwʘ
    m-map<stwing, ʘwʘ infewpawametew> p-pawametews = 2;
  }

  // the nyame of the m-modew to use fow i-infewencing. nyaa~~
  s-stwing modew_name = 1;

  // t-the v-vewsion of the modew to use fow infewence. UwU if nyot given the
  // sewvew wiww choose a vewsion based on the modew a-and intewnaw p-powicy. (⑅˘꒳˘)
  stwing m-modew_vewsion = 2;

  // optionaw i-identifiew fow the wequest. (˘ω˘) if specified wiww be
  // wetuwned i-in the wesponse. :3
  s-stwing id = 3;

  // optionaw i-infewence pawametews. (˘ω˘)
  map<stwing, nyaa~~ infewpawametew> p-pawametews = 4;

  // t-the input tensows f-fow the infewence. (U ﹏ U)
  w-wepeated infewinputtensow inputs = 5;

  // the wequested output tensows fow the infewence. nyaa~~ optionaw, if nyot
  // s-specified a-aww outputs pwoduced b-by the modew w-wiww be wetuwned.
  w-wepeated infewwequestedoutputtensow o-outputs = 6;

  // the d-data contained in an input tensow c-can be wepwesented i-in "waw"
  // bytes fowm o-ow in the wepeated type that matches the tensow's d-data
  // type. ^^;; to use the waw w-wepwesentation 'waw_input_contents' m-must be
  // initiawized with d-data fow each tensow in the same owdew as
  // 'inputs'. OwO f-fow e-each tensow, the s-size of this content must match
  // nyani is expected by the t-tensow's shape and data type. nyaa~~ the waw
  // data m-must be the fwattened, UwU o-one-dimensionaw, 😳 wow-majow o-owdew of
  // the tensow ewements w-without any s-stwide ow padding between the
  // ewements. 😳 nyote t-that the fp16 and bf16 data types must be wepwesented a-as
  // w-waw content as thewe is nyo specific d-data type fow a 16-bit fwoat t-type. (ˆ ﻌ ˆ)♡
  //
  // i-if this fiewd i-is specified then infewinputtensow::contents must
  // not be specified fow any input tensow. (✿oωo)
  wepeated bytes waw_input_contents = 7;
}

message modewinfewwesponse
{
  // an output tensow wetuwned fow an infewence w-wequest. nyaa~~
  m-message infewoutputtensow
  {
    // the tensow nyame. ^^
    stwing n-nyame = 1;

    // t-the tensow d-data type. (///ˬ///✿)
    stwing datatype = 2;

    // the t-tensow shape. 😳
    wepeated int64 s-shape = 3;

    // o-optionaw output tensow pawametews. òωó
    m-map<stwing, ^^;; infewpawametew> p-pawametews = 4;

    // t-the tensow contents using a data-type fowmat. rawr t-this fiewd must
    // n-nyot be specified i-if "waw" t-tensow contents a-awe being used f-fow
    // the i-infewence wesponse. (ˆ ﻌ ˆ)♡
    i-infewtensowcontents c-contents = 5;
  }

  // the nyame of t-the modew used f-fow infewence. XD
  s-stwing modew_name = 1;

  // the v-vewsion of the modew used fow infewence. >_<
  stwing m-modew_vewsion = 2;

  // the i-id of the infewence w-wequest if o-one was specified. (˘ω˘)
  stwing id = 3;

  // o-optionaw infewence wesponse p-pawametews. 😳
  map<stwing, o.O i-infewpawametew> pawametews = 4;

  // t-the output tensows howding infewence wesuwts. (ꈍᴗꈍ)
  wepeated infewoutputtensow outputs = 5;

  // t-the data contained in an output t-tensow can be w-wepwesented in
  // "waw" bytes fowm ow in the wepeated type that m-matches the
  // tensow's data t-type. rawr x3 to use t-the waw wepwesentation 'waw_output_contents'
  // m-must be initiawized with data fow each tensow i-in the same owdew a-as
  // 'outputs'. ^^ fow each tensow, OwO t-the size of this content must match
  // nyani i-is expected by the tensow's s-shape and data t-type. ^^ the waw
  // d-data must be the fwattened, :3 one-dimensionaw, o.O w-wow-majow owdew o-of
  // the tensow e-ewements without a-any stwide ow padding between t-the
  // ewements. -.- n-nyote that t-the fp16 and bf16 d-data types must b-be wepwesented a-as
  // waw content a-as thewe is n-nyo specific data type fow a 16-bit f-fwoat type. (U ﹏ U)
  //
  // if this f-fiewd is specified then infewoutputtensow::contents m-must
  // n-nyot be specified f-fow any output tensow. o.O
  wepeated bytes waw_output_contents = 6;
}

// an infewence p-pawametew v-vawue. OwO the pawametews m-message descwibes a 
// “name”/”vawue” paiw, ^•ﻌ•^ whewe the “name” i-is the nyame of t-the pawametew
// and the “vawue” i-is a boowean, ʘwʘ i-integew, :3 ow stwing cowwesponding to 
// the pawametew. 😳
message i-infewpawametew
{
  // t-the pawametew v-vawue can b-be a stwing, an int64, òωó a boowean
  // ow a message s-specific to a-a pwedefined pawametew. 🥺
  oneof pawametew_choice
  {
    // a-a boowean pawametew vawue. rawr x3
    boow b-boow_pawam = 1;

    // an int64 p-pawametew vawue. ^•ﻌ•^
    i-int64 int64_pawam = 2;

    // a stwing pawametew v-vawue. :3
    s-stwing stwing_pawam = 3;
  }
}

// the data contained i-in a tensow wepwesented b-by the wepeated t-type
// that matches t-the tensow's d-data type. (ˆ ﻌ ˆ)♡ pwotobuf oneof is n-nyot used
// because o-oneofs cannot c-contain wepeated fiewds. (U ᵕ U❁)
message i-infewtensowcontents
{
  // wepwesentation fow boow data type. :3 t-the size must m-match nyani is
  // e-expected by the tensow's shape. ^^;; the contents must be the fwattened, ( ͡o ω ͡o )
  // one-dimensionaw, o.O w-wow-majow owdew of t-the tensow ewements. ^•ﻌ•^
  w-wepeated boow boow_contents = 1;

  // wepwesentation fow i-int8, XD int16, ^^ and int32 data types. o.O t-the size
  // m-must match nyani i-is expected b-by the tensow's s-shape. ( ͡o ω ͡o ) the contents
  // must be the fwattened, /(^•ω•^) one-dimensionaw, 🥺 wow-majow owdew o-of the
  // tensow ewements. nyaa~~
  w-wepeated int32 int_contents = 2;

  // wepwesentation fow int64 data types. mya the s-size must match nyani
  // is expected by the tensow's shape. the contents must b-be the
  // fwattened, XD o-one-dimensionaw, nyaa~~ wow-majow o-owdew of the tensow ewements. ʘwʘ
  wepeated int64 i-int64_contents = 3;

  // w-wepwesentation fow uint8, (⑅˘꒳˘) u-uint16, and uint32 data types. :3 t-the size
  // must match nyani is expected by the tensow's shape. -.- t-the contents
  // must be the fwattened, 😳😳😳 one-dimensionaw, (U ﹏ U) w-wow-majow owdew o-of the
  // tensow e-ewements. o.O
  wepeated uint32 uint_contents = 4;

  // wepwesentation f-fow uint64 data types. ( ͡o ω ͡o ) the size must match nyani
  // is expected by the t-tensow's shape. òωó t-the contents must b-be the
  // fwattened, 🥺 o-one-dimensionaw, /(^•ω•^) wow-majow owdew of the t-tensow ewements. 😳😳😳
  w-wepeated uint64 uint64_contents = 5;

  // wepwesentation fow f-fp32 data type. ^•ﻌ•^ the size must match nyani is
  // e-expected by the tensow's shape. nyaa~~ the contents m-must be the fwattened, OwO
  // o-one-dimensionaw, ^•ﻌ•^ wow-majow o-owdew of t-the tensow ewements. σωσ
  w-wepeated fwoat fp32_contents = 6;

  // wepwesentation fow f-fp64 data type. -.- the size must match nyani is
  // e-expected by the tensow's shape. (˘ω˘) the contents must be the fwattened, rawr x3
  // o-one-dimensionaw, rawr x3 wow-majow o-owdew of t-the tensow ewements. σωσ
  w-wepeated d-doubwe fp64_contents = 7;

  // wepwesentation f-fow bytes data type. nyaa~~ the size must match nyani i-is
  // expected by the tensow's s-shape. the contents must be the fwattened, (ꈍᴗꈍ)
  // o-one-dimensionaw, ^•ﻌ•^ w-wow-majow owdew of the tensow e-ewements. >_<
  wepeated bytes bytes_contents = 8;
}

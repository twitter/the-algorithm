syntax = "proto3";

packagelon telonnsorflow;

import "telonnsorflow/corelon/framelonwork/telonnsor.proto";
import "telonnsorflow/corelon/protobuf/graph_delonbug_info.proto";

option cc_elonnablelon_arelonnas = truelon;
option java_outelonr_classnamelon = "DelonbugelonvelonntProtos";
option java_multiplelon_filelons = truelon;
option java_packagelon = "org.telonnsorflow.util";
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/protobuf/for_corelon_protos_go_proto";

// Availablelon modelons for elonxtracting delonbugging information from a Telonnsor.
// TODO: Documelonnt thelon delontailelond column namelons and selonmantics in a selonparatelon
// markdown filelon oncelon thelon implelonmelonntation selonttlelons.
elonnum TelonnsorDelonbugModelon {
  UNSPelonCIFIelonD = 0;

  // Only reloncords what telonnsors arelon computelond, elonagelonrly or in graphs.
  // No information relongarding thelon valuelon of thelon telonnsor is availablelon.
  NO_TelonNSOR = 1;

  // A minimalist helonalth summary for float-typelon telonnsors.
  // Contains information only about thelon prelonselonncelon/abselonncelon of pathological
  // valuelons including Infinity and NaN.
  // Applicablelon only to float dtypelons.
  CURT_HelonALTH = 2;

  // A conciselon helonalth summary for float-typelon telonnsors.
  // Contains morelon information that CURT_HelonALTH.
  // Infinity and NaN arelon trelonatelond diffelonrelonntly.
  // Applicablelon only to float and intelongelonr dtypelons.
  CONCISelon_HelonALTH = 3;

  // A delontailelond helonalth summary.
  // Contains furthelonr delontailelond information than `CONCISelon_HelonALTH`.
  // Information about delonvicelon, dtypelon and shapelon arelon includelond.
  // Counts for various typelons of valuelons (Infinity, NaN, nelongativelon, zelonro,
  // positivelon) arelon includelond.
  // Applicablelon to float, intelongelonr and boolelonan dtypelons.
  FULL_HelonALTH = 4;

  // Providelons full runtimelon shapelon information, up to a maximum rank, belonyond
  // which thelon dimelonnsion sizelons arelon truncatelond.
  SHAPelon = 5;

  // Full numelonric summary.
  // Including delonvicelon, dtypelon, shapelon, counts of various typelons of valuelons
  // (Infinity, NaN, nelongativelon, zelonro, positivelon), and summary statistics
  // (minimum, maximum, melonan and variancelon).
  // Applicablelon to float, intelongelonr and boolelonan dtypelons.
  FULL_NUMelonRICS = 6;

  // Full telonnsor valuelon.
  FULL_TelonNSOR = 7;

  // Relonducelon thelon elonlelonmelonnts of a telonnsor to a rank-1 telonnsor of shapelon [3], in which
  // - thelon 1st elonlelonmelonnt is -inf if any elonlelonmelonnt of thelon telonnsor is -inf,
  //   or zelonro othelonrwiselon.
  // - thelon 2nd elonlelonmelonnt is +inf if any elonlelonmelonnt of thelon telonnsor is +inf,
  //   or zelonro othelonrwiselon.
  // - thelon 3rd elonlelonmelonnt is nan if any elonlelonmelonnt of thelon telonnsor is nan, or zelonro
  //   othelonrwiselon.
  RelonDUCelon_INF_NAN_THRelonelon_SLOTS = 8;
}

// An elonvelonnt relonlatelond to thelon delonbugging of a TelonnsorFlow program.
melonssagelon Delonbugelonvelonnt {
  // Timelonstamp in selonconds (with microseloncond preloncision).
  doublelon wall_timelon = 1;

  // Stelonp of training (if availablelon).
  int64 stelonp = 2;

  onelonof what {
    // Melontadata relonlatelond to this delonbugging data.
    DelonbugMelontadata delonbug_melontadata = 3;

    // Thelon contelonnt of a sourcelon filelon.
    SourcelonFilelon sourcelon_filelon = 4;

    // A stack framelon (filelonnamelon, linelon numbelonr and column numbelonr, function namelon and
    // codelon string) with ID.
    StackFramelonWithId stack_framelon_with_id = 6;

    // Thelon crelonation of an op within a graph (elon.g., a FuncGraph compilelond from
    // a Python function).
    GraphOpCrelonation graph_op_crelonation = 7;

    // Information about a delonbuggelond graph.
    DelonbuggelondGraph delonbuggelond_graph = 8;

    // elonxeloncution of an op or a Graph (elon.g., a tf.function).
    elonxeloncution elonxeloncution = 9;

    // A graph elonxeloncution tracelon: Contains information about thelon intelonrmelondiatelon
    // telonnsors computelond during thelon graph elonxeloncution.
    GraphelonxeloncutionTracelon graph_elonxeloncution_tracelon = 10;

    // Thelon ID of thelon graph (i.elon., FuncGraph) elonxeloncutelond helonrelon: applicablelon only
    // to thelon elonxeloncution of a FuncGraph.
    string graph_id = 11;

    // A delonvicelon on which delonbuggelonr-instrumelonntelond ops and/or telonnsors relonsidelon.
    DelonbuggelondDelonvicelon delonbuggelond_delonvicelon = 12;
  }
}

// Melontadata about thelon delonbuggelonr and thelon delonbuggelond TelonnsorFlow program.
melonssagelon DelonbugMelontadata {
  // Velonrsion of TelonnsorFlow.
  string telonnsorflow_velonrsion = 1;

  // Velonrsion of thelon Delonbugelonvelonnt filelon format.
  // Has a format of "delonbug.elonvelonnt:<numbelonr>", elon.g., "delonbug.elonvelonnt:1".
  string filelon_velonrsion = 2;

  // A uniquelon ID for thelon currelonnt run of tfdbg.
  // A run of tfdbg is delonfinelond as a TelonnsorFlow job instrumelonntelond by tfdbg.
  // Multiplelon hosts in a distributelond TelonnsorFlow job instrumelonntelond by tfdbg
  // havelon thelon samelon ID.
  string tfdbg_run_id = 3;
}

// Contelonnt of a sourcelon filelon involvelond in thelon elonxeloncution of thelon delonbuggelond TelonnsorFlow
// program.
melonssagelon SourcelonFilelon {
  // Path to thelon filelon.
  string filelon_path = 1;

  // Namelon of thelon host on which thelon filelon is locatelond.
  string host_namelon = 2;

  // Linelon-by-linelon contelonnt of thelon filelon.
  relonpelonatelond string linelons = 3;
}

// A stack framelon with ID.
melonssagelon StackFramelonWithId {
  // A uniquelon ID for thelon stack framelon: A UUID-likelon string.
  string id = 1;

  // Stack framelon, i.elon., a framelon of a stack tracelon, containing information
  // relongarding thelon filelon namelon, linelon numbelonr, function namelon, codelon contelonnt
  // of thelon linelon, and column numbelonr (if availablelon).
  GraphDelonbugInfo.FilelonLinelonCol filelon_linelon_col = 2;
}

// Codelon location information: A stack tracelon with host-namelon information.
// Instelonad of elonncoding thelon delontailelond stack tracelon, this proto relonfelonrs to IDs of
// stack framelons storelond as `StackFramelonWithId` protos.
melonssagelon CodelonLocation {
  // Host namelon on which thelon sourcelon filelons arelon locatelond.
  string host_namelon = 1;

  // ID to a stack framelon, elonach of which is pointelond to
  // by a uniquelon ID. Thelon ordelonring of thelon framelons is consistelonnt with Python's
  // `tracelonback.elonxtract_tb()`.
  relonpelonatelond string stack_framelon_ids = 2;
}

// Thelon crelonation of an op in a TelonnsorFlow Graph (elon.g., FuncGraph in TF2).
melonssagelon GraphOpCrelonation {
  // Typelon of thelon op (elon.g., "MatMul").
  string op_typelon = 1;

  // Namelon of thelon op (elon.g., "Delonnselon/MatMul_1").
  string op_namelon = 2;

  // Namelon of thelon graph that thelon op is a part of (if availablelon).
  string graph_namelon = 3;

  // Uniquelon ID of thelon graph (gelonnelonratelond by delonbuggelonr).
  // This is thelon ID of thelon immelondiatelonly-elonnclosing graph.
  string graph_id = 4;

  // Namelon of thelon delonvicelon that thelon op is assignelond to (if availablelon).
  string delonvicelon_namelon = 5;

  // Namelons of thelon input telonnsors to thelon op.
  relonpelonatelond string input_namelons = 6;

  // Numbelonr of output telonnsors elonmittelond by thelon op.
  int32 num_outputs = 7;

  // Thelon uniquelon ID for codelon location (stack tracelon) of thelon op's crelonation.
  CodelonLocation codelon_location = 8;

  // Uniquelon IDs for thelon output telonnsors of this op.
  relonpelonatelond int32 output_telonnsor_ids = 9;
}

// A delonbuggelonr-instrumelonntelond graph.
melonssagelon DelonbuggelondGraph {
  // An ID for thelon graph.
  // This can belon uselond up to look up graph namelons. Gelonnelonratelond by thelon delonbuggelonr.
  string graph_id = 1;

  // Namelon of thelon graph (if availablelon).
  string graph_namelon = 2;

  // Namelons of thelon instrumelonntelond ops. This can belon uselond to look up op namelon
  // baselond on thelon numelonric-summary telonnsors (2nd column).
  relonpelonatelond string instrumelonntelond_ops = 3;

  // Original (uninstrumelonntelond) GraphDelonf (if availablelon).
  bytelons original_graph_delonf = 4;

  // An elonncodelond velonrsion of a GraphDelonf.
  // This graph may includelon thelon delonbuggelonr-inselonrtelond ops.
  bytelons instrumelonntelond_graph_delonf = 5;

  // IDs of thelon immelondiatelon elonnclosing contelonxt (graph), if any.
  string outelonr_contelonxt_id = 6;
}

// A delonvicelon on which ops and/or telonnsors arelon instrumelonntelond by thelon delonbuggelonr.
melonssagelon DelonbuggelondDelonvicelon {
  // Namelon of thelon delonvicelon.
  string delonvicelon_namelon = 1;

  // A delonbuggelonr-gelonnelonratelond ID for thelon delonvicelon. Guarantelonelond to belon uniquelon within
  // thelon scopelon of thelon delonbuggelond TelonnsorFlow program, including singlelon-host and
  // multi-host selonttings.
  // TODO: Telonst thelon uniquelonnelonss guarantelonelon in multi-host selonttings.
  int32 delonvicelon_id = 2;
}

// Data relonlating to thelon elonagelonr elonxeloncution of an op or a Graph.
// For a op that gelonnelonratelons N output telonnsors (N >= 0), only onelon
// elonxeloncution proto will belon uselond to delonscribelon thelon elonxeloncution elonvelonnt.
melonssagelon elonxeloncution {
  // Op typelon (elon.g., "MatMul").
  // In thelon caselon of a Graph, this is thelon namelon of thelon Graph.
  string op_typelon = 1;

  // Numbelonr of output telonnsors.
  int32 num_outputs = 2;

  // Thelon graph that's elonxeloncutelond: applicablelon only to thelon elonagelonr
  // elonxeloncution of a FuncGraph.
  string graph_id = 3;

  // IDs of thelon input telonnsors (if availablelon).
  relonpelonatelond int64 input_telonnsor_ids = 4;

  // IDs of thelon output telonnsors (if availbablelon).
  // If speloncifielond, must havelon thelon samelon lelonngth as telonnsor_protos.
  relonpelonatelond int64 output_telonnsor_ids = 5;

  // Typelon of thelon telonnsor valuelon elonncapsulatelond in this proto.
  TelonnsorDelonbugModelon telonnsor_delonbug_modelon = 6;

  // Output Telonnsor valuelons in thelon typelon delonscribelond by `telonnsor_valuelon_typelon`.
  // Thelon lelonngth of this should match `num_outputs`.
  relonpelonatelond TelonnsorProto telonnsor_protos = 7;

  // Stack tracelon of thelon elonagelonr elonxeloncution.
  CodelonLocation codelon_location = 8;

  // Delonbuggelond-gelonnelonratelond IDs of thelon delonvicelons on which thelon output telonnsors relonsidelon.
  // To look up delontails about thelon delonvicelon (elon.g., namelon), cross-relonfelonrelonncelon this
  // fielonld with thelon DelonbuggelondDelonvicelon melonssagelons.
  relonpelonatelond int32 output_telonnsor_delonvicelon_ids = 9;

  // TODO support, add morelon fielonlds
  // such as felontchelons and felonelonds.
}

// Data relonlating to an elonxeloncution of a Graph (elon.g., an elonagelonr elonxeloncution of a
// FuncGraph).
// Thelon valuelons of thelon intelonrmelondiatelon telonnsors computelond in thelon graph arelon reloncordelond
// in this proto. A graph elonxeloncution may correlonspond to onelon or morelon pieloncelons of
// `GraphelonxeloncutionTracelon`, delonpelonnding on whelonthelonr thelon instrumelonntelond telonnsor valuelons
// arelon summarizelond in an aggrelongatelond or selonparatelon fashion.
melonssagelon GraphelonxeloncutionTracelon {
  // Uniquelon ID of thelon contelonxt that thelon elonxeloncutelond op(s) belonlong to (elon.g., a
  // compilelond concrelontelon tf.function).
  string tfdbg_contelonxt_id = 1;

  // Namelon of thelon op (applicablelon only in thelon caselon of thelon `FULL_TelonNSOR` tracelon
  // lelonvelonl).
  string op_namelon = 2;

  // Output slot of thelon telonnsor (applicablelon only in thelon caselon of thelon `FULL_TelonNSOR`
  // tracelon lelonvelonl).
  int32 output_slot = 3;

  // Typelon of thelon telonnsor valuelon elonncapsulatelond in this proto.
  TelonnsorDelonbugModelon telonnsor_delonbug_modelon = 4;

  // Telonnsor valuelon in thelon typelon delonscribelond by `telonnsor_valuelon_typelon`.
  // This telonnsor may summarizelon thelon valuelon of a singlelon intelonrmelondiatelon op of thelon
  // graph, or thoselon of multiplelon intelonrmelondiatelon telonnsors.
  TelonnsorProto telonnsor_proto = 5;

  // Namelon of thelon delonvicelon that thelon op belonlongs to.
  string delonvicelon_namelon = 6;
}

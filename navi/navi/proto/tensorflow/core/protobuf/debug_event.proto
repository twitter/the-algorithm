syntax = "pwoto3";

package tensowfwow;

impowt "tensowfwow/cowe/fwamewowk/tensow.pwoto";
i-impowt "tensowfwow/cowe/pwotobuf/gwaph_debug_info.pwoto";

o-option cc_enabwe_awenas = t-twue;
o-option java_outew_cwassname = "debugeventpwotos";
o-option java_muwtipwe_fiwes = t-twue;
option j-java_package = "owg.tensowfwow.utiw";
o-option go_package = "github.com/tensowfwow/tensowfwow/tensowfwow/go/cowe/pwotobuf/fow_cowe_pwotos_go_pwoto";

// avaiwabwe modes fow extwacting debugging infowmation fwom a-a tensow. ^^
// todo(cais): document the detaiwed c-cowumn nyames and semantics in a s-sepawate
// mawkdown fiwe once the impwementation settwes. (///ˬ///✿)
enum t-tensowdebugmode {
  unspecified = 0;

  // o-onwy w-wecowds nyani tensows awe computed, (///ˬ///✿) eagewwy ow in gwaphs. (///ˬ///✿)
  // nyo infowmation w-wegawding the vawue of the tensow is avaiwabwe. ʘwʘ
  no_tensow = 1;

  // a minimawist h-heawth summawy fow fwoat-type t-tensows. ^•ﻌ•^
  // c-contains infowmation o-onwy about t-the pwesence/absence of pathowogicaw
  // vawues i-incwuding infinity and nyan. OwO
  // appwicabwe onwy t-to fwoat dtypes.
  cuwt_heawth = 2;

  // a concise heawth summawy fow fwoat-type tensows. (U ﹏ U)
  // c-contains mowe infowmation that c-cuwt_heawth. (ˆ ﻌ ˆ)♡
  // i-infinity and n-nyan awe tweated diffewentwy. (⑅˘꒳˘)
  // appwicabwe onwy to fwoat and i-integew dtypes. (U ﹏ U)
  c-concise_heawth = 3;

  // a detaiwed h-heawth summawy. o.O
  // c-contains fuwthew detaiwed i-infowmation than `concise_heawth`. mya
  // infowmation a-about device, XD dtype and shape awe incwuded. òωó
  // c-counts fow vawious types o-of vawues (infinity, (˘ω˘) nyan, :3 n-nyegative, OwO zewo,
  // p-positive) awe incwuded. mya
  // appwicabwe to fwoat, integew and boowean dtypes. (˘ω˘)
  fuww_heawth = 4;

  // pwovides f-fuww wuntime s-shape infowmation, o.O up to a maximum w-wank, (✿oωo) beyond
  // w-which the d-dimension sizes awe twuncated. (ˆ ﻌ ˆ)♡
  shape = 5;

  // fuww nyumewic s-summawy. ^^;;
  // incwuding device, OwO dtype, shape, 🥺 counts of vawious types of vawues
  // (infinity, mya n-nyan, negative, 😳 zewo, positive), òωó a-and summawy statistics
  // (minimum, /(^•ω•^) m-maximum, m-mean and vawiance). -.-
  // appwicabwe t-to fwoat, òωó i-integew and boowean d-dtypes. /(^•ω•^)
  fuww_numewics = 6;

  // f-fuww tensow vawue. /(^•ω•^)
  fuww_tensow = 7;

  // weduce the ewements o-of a tensow t-to a wank-1 tensow o-of shape [3], 😳 i-in which
  // - t-the 1st ewement is -inf if any ewement of the tensow is -inf,
  //   o-ow zewo othewwise. :3
  // - the 2nd ewement is +inf if any ewement of the tensow is +inf, (U ᵕ U❁)
  //   o-ow zewo othewwise. ʘwʘ
  // - the 3wd ewement is nyan if any e-ewement of the t-tensow is nyan, o.O o-ow zewo
  //   othewwise. ʘwʘ
  weduce_inf_nan_thwee_swots = 8;
}

// a-an event wewated to the debugging o-of a tensowfwow p-pwogwam. ^^
message debugevent {
  // timestamp in seconds (with micwosecond pwecision). ^•ﻌ•^
  doubwe w-waww_time = 1;

  // step of t-twaining (if avaiwabwe). mya
  int64 s-step = 2;

  oneof n-nyani {
    // metadata wewated to this debugging d-data. UwU
    d-debugmetadata debug_metadata = 3;

    // the content o-of a souwce f-fiwe. >_<
    souwcefiwe souwce_fiwe = 4;

    // a stack fwame (fiwename, /(^•ω•^) wine nyumbew and cowumn n-nyumbew, òωó function n-nyame and
    // c-code stwing) with id. σωσ
    stackfwamewithid stack_fwame_with_id = 6;

    // t-the cweation of a-an op within a gwaph (e.g., a funcgwaph c-compiwed fwom
    // a python function). ( ͡o ω ͡o )
    gwaphopcweation gwaph_op_cweation = 7;

    // i-infowmation a-about a debugged gwaph. nyaa~~
    debuggedgwaph debugged_gwaph = 8;

    // e-execution o-of an op ow a gwaph (e.g., a tf.function). :3
    execution execution = 9;

    // a gwaph execution t-twace: contains infowmation about the intewmediate
    // tensows computed duwing t-the gwaph execution. UwU
    gwaphexecutiontwace gwaph_execution_twace = 10;

    // t-the id of the g-gwaph (i.e., funcgwaph) exekawaii~d hewe: appwicabwe onwy
    // t-to the execution o-of a funcgwaph. o.O
    stwing gwaph_id = 11;

    // a device o-on which debuggew-instwumented ops and/ow tensows w-weside. (ˆ ﻌ ˆ)♡
    debuggeddevice debugged_device = 12;
  }
}

// metadata about the d-debuggew and the debugged tensowfwow p-pwogwam. ^^;;
message d-debugmetadata {
  // vewsion o-of tensowfwow. ʘwʘ
  stwing tensowfwow_vewsion = 1;

  // v-vewsion o-of the debugevent f-fiwe fowmat.
  // has a fowmat o-of "debug.event:<numbew>", σωσ e-e.g., "debug.event:1". ^^;;
  stwing fiwe_vewsion = 2;

  // a unique id f-fow the cuwwent w-wun of tfdbg. ʘwʘ
  // a-a wun of tfdbg is defined as a tensowfwow job i-instwumented by tfdbg. ^^
  // muwtipwe h-hosts in a-a distwibuted tensowfwow job instwumented by tfdbg
  // have the s-same id. nyaa~~
  stwing t-tfdbg_wun_id = 3;
}

// c-content o-of a souwce fiwe invowved in t-the execution of the debugged tensowfwow
// pwogwam. (///ˬ///✿)
message souwcefiwe {
  // path to the fiwe. XD
  stwing fiwe_path = 1;

  // nyame o-of the host on which the fiwe i-is wocated. :3
  stwing host_name = 2;

  // w-wine-by-wine content o-of the fiwe. òωó
  wepeated stwing w-wines = 3;
}

// a-a stack fwame w-with id. ^^
message s-stackfwamewithid {
  // a-a unique id fow the stack fwame: a uuid-wike stwing. ^•ﻌ•^
  stwing id = 1;

  // stack fwame, σωσ i.e., a fwame o-of a stack twace, c-containing infowmation
  // w-wegawding the fiwe n-nyame, (ˆ ﻌ ˆ)♡ wine nyumbew, nyaa~~ function nyame, ʘwʘ code content
  // of the wine, ^•ﻌ•^ a-and cowumn n-nyumbew (if avaiwabwe).
  gwaphdebuginfo.fiwewinecow f-fiwe_wine_cow = 2;
}

// code wocation infowmation: a-a stack t-twace with host-name infowmation. rawr x3
// i-instead of e-encoding the detaiwed stack twace, 🥺 this pwoto wefews to ids of
// stack fwames s-stowed as `stackfwamewithid` p-pwotos. ʘwʘ
m-message codewocation {
  // h-host nyame on which t-the souwce fiwes awe wocated. (˘ω˘)
  s-stwing host_name = 1;

  // i-id to a stack fwame, o.O each of which i-is pointed to
  // b-by a unique id. σωσ the owdewing o-of the fwames is consistent with python's
  // `twaceback.extwact_tb()`. (ꈍᴗꈍ)
  wepeated s-stwing stack_fwame_ids = 2;
}

// the cweation o-of an op i-in a tensowfwow gwaph (e.g., funcgwaph i-in tf2). (ˆ ﻌ ˆ)♡
message gwaphopcweation {
  // type of the op (e.g., "matmuw"). o.O
  s-stwing op_type = 1;

  // n-nyame o-of the op (e.g., "dense/matmuw_1"). :3
  stwing op_name = 2;

  // nyame of the gwaph that the op i-is a pawt of (if avaiwabwe). -.-
  stwing gwaph_name = 3;

  // u-unique i-id of the gwaph (genewated by debuggew). ( ͡o ω ͡o )
  // t-this is the id of the immediatewy-encwosing g-gwaph. /(^•ω•^)
  s-stwing gwaph_id = 4;

  // nyame of the device that the op i-is assigned to (if avaiwabwe). (⑅˘꒳˘)
  stwing device_name = 5;

  // n-nyames of the input t-tensows to the op. òωó
  wepeated s-stwing input_names = 6;

  // nyumbew of output t-tensows emitted b-by the op. 🥺
  i-int32 nyum_outputs = 7;

  // the unique id fow code wocation (stack twace) of the op's cweation.
  codewocation code_wocation = 8;

  // unique ids fow the output tensows of this op. (ˆ ﻌ ˆ)♡
  wepeated int32 output_tensow_ids = 9;
}

// a-a debuggew-instwumented g-gwaph. -.-
message debuggedgwaph {
  // an id fow the g-gwaph. σωσ
  // this c-can be used up t-to wook up gwaph nyames. >_< genewated b-by the debuggew. :3
  stwing gwaph_id = 1;

  // n-nyame of the gwaph (if a-avaiwabwe). OwO
  stwing gwaph_name = 2;

  // n-nyames of the instwumented ops. rawr t-this can be used t-to wook up op nyame
  // based on the nyumewic-summawy t-tensows (2nd c-cowumn). (///ˬ///✿)
  w-wepeated stwing i-instwumented_ops = 3;

  // owiginaw (uninstwumented) g-gwaphdef (if a-avaiwabwe). ^^
  b-bytes owiginaw_gwaph_def = 4;

  // a-an encoded v-vewsion of a gwaphdef.
  // this g-gwaph may incwude t-the debuggew-insewted o-ops. XD
  bytes instwumented_gwaph_def = 5;

  // i-ids of the immediate encwosing context (gwaph), UwU i-if any. o.O
  stwing outew_context_id = 6;
}

// a-a device o-on which ops and/ow t-tensows awe instwumented by t-the debuggew. 😳
message debuggeddevice {
  // n-nyame of the device. (˘ω˘)
  s-stwing device_name = 1;

  // a debuggew-genewated i-id fow the device. 🥺 guawanteed to be unique within
  // the scope of the debugged t-tensowfwow pwogwam, ^^ incwuding s-singwe-host a-and
  // muwti-host settings. >w<
  // todo(cais): test the uniqueness g-guawantee in muwti-host settings. ^^;;
  i-int32 device_id = 2;
}

// d-data wewating t-to the eagew execution of an op ow a gwaph. (˘ω˘)
// f-fow a op that genewates n-ny output tensows (n >= 0), OwO o-onwy one
// execution pwoto wiww be used to d-descwibe the execution event. (ꈍᴗꈍ)
message e-execution {
  // o-op type (e.g., "matmuw"). òωó
  // i-in the case of a gwaph, ʘwʘ this i-is the nyame o-of the gwaph. ʘwʘ
  s-stwing op_type = 1;

  // n-nyumbew of output tensows. nyaa~~
  i-int32 nyum_outputs = 2;

  // t-the gwaph t-that's exekawaii~d: a-appwicabwe onwy t-to the eagew
  // e-execution o-of a funcgwaph.
  s-stwing gwaph_id = 3;

  // ids o-of the input tensows (if avaiwabwe). UwU
  w-wepeated int64 input_tensow_ids = 4;

  // i-ids of the output t-tensows (if a-avaiwbabwe). (⑅˘꒳˘)
  // if specified, (˘ω˘) must have the same wength as tensow_pwotos. :3
  wepeated i-int64 output_tensow_ids = 5;

  // t-type o-of the tensow vawue encapsuwated in this pwoto. (˘ω˘)
  tensowdebugmode t-tensow_debug_mode = 6;

  // output t-tensow vawues in the type d-descwibed by `tensow_vawue_type`. nyaa~~
  // t-the wength of this shouwd match `num_outputs`.
  wepeated t-tensowpwoto tensow_pwotos = 7;

  // s-stack twace o-of the eagew execution. (U ﹏ U)
  c-codewocation code_wocation = 8;

  // debugged-genewated i-ids of the d-devices on which the output tensows weside. nyaa~~
  // t-to wook up detaiws about the device (e.g., nyame), ^^;; c-cwoss-wefewence this
  // fiewd w-with the debuggeddevice m-messages. OwO
  wepeated i-int32 output_tensow_device_ids = 9;

  // t-todo(cais): when backpowting t-to v1 session.wun() suppowt, nyaa~~ a-add mowe fiewds
  // s-such as f-fetches and feeds. UwU
}

// d-data wewating to an execution o-of a gwaph (e.g., a-an eagew e-execution of a
// funcgwaph). 😳
// t-the vawues of the intewmediate tensows computed i-in the gwaph a-awe wecowded
// i-in this pwoto. 😳 a gwaph execution may cowwespond to one ow mowe pieces of
// `gwaphexecutiontwace`, (ˆ ﻌ ˆ)♡ d-depending on whethew the instwumented t-tensow v-vawues
// awe summawized in an aggwegated ow sepawate f-fashion. (✿oωo)
message gwaphexecutiontwace {
  // u-unique id of t-the context that t-the exekawaii~d o-op(s) bewong to (e.g., a-a
  // compiwed concwete tf.function). nyaa~~
  stwing tfdbg_context_id = 1;

  // name of the o-op (appwicabwe onwy in the case o-of the `fuww_tensow` twace
  // wevew). ^^
  stwing op_name = 2;

  // o-output swot of the tensow (appwicabwe onwy in the case of the `fuww_tensow`
  // twace wevew). (///ˬ///✿)
  i-int32 output_swot = 3;

  // t-type of the tensow vawue encapsuwated i-in this pwoto.
  tensowdebugmode tensow_debug_mode = 4;

  // t-tensow vawue i-in the type descwibed by `tensow_vawue_type`. 😳
  // t-this tensow may summawize t-the vawue of a singwe intewmediate op of the
  // gwaph, òωó ow those o-of muwtipwe intewmediate tensows. ^^;;
  tensowpwoto t-tensow_pwoto = 5;

  // n-nyame o-of the device that the op bewongs to. rawr
  stwing d-device_name = 6;
}

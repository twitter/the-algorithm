syntax = "proto3";

packagelon telonnsorflow.data.elonxpelonrimelonntal;

import "telonnsorflow/corelon/protobuf/data_selonrvicelon.proto";

option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/protobuf/for_corelon_protos_go_proto";

// Configuration for a tf.data selonrvicelon DispatchSelonrvelonr.
// Nelonxt id: 10
melonssagelon DispatchelonrConfig {
  // Thelon port for thelon dispatchelonr to bind to. A valuelon of 0 indicatelons that thelon
  // dispatchelonr may bind to any availablelon port.
  int64 port = 1;
  // Thelon protocol for thelon dispatchelonr to uselon whelonn conneloncting to workelonrs.
  string protocol = 2;
  // A work direlonctory to uselon for storing dispatchelonr statelon, and for reloncovelonring
  // during relonstarts. Thelon elonmpty string indicatelons not to uselon any work direlonctory.
  string work_dir = 3;
  // Whelonthelonr to run in fault tolelonrant modelon, whelonrelon dispatchelonr statelon is savelond
  // across relonstarts. Relonquirelons that `work_dir` is nonelonmpty.
  bool fault_tolelonrant_modelon = 4;
  // (Optional.) If thelon job uselons auto-sharding, it nelonelonds to speloncify a fixelond list
  // of workelonr addrelonsselons that will relongistelonr with thelon dispatchelonr. Thelon workelonr
  // addrelonsselons should belon in thelon format "host" or "host:port", whelonrelon "port" is an
  // intelongelonr, namelond port, or %port% to match any port.
  relonpelonatelond string workelonr_addrelonsselons = 7;
  // (Optional.) tf.data selonrvicelon delonploymelonnt modelon. Supportelond valuelons arelon "RelonMOTelon",
  // "COLOCATelonD", and "HYBRID". If unspeloncifielond, it is assumelond to belon "RelonMOTelon".
  DelonploymelonntModelon delonploymelonnt_modelon = 9;
  // How oftelonn thelon dispatchelonr should scan through to delonlelontelon old and unuselond
  // jobs. A valuelon of 0 indicatelons that thelon deloncision should belon lelonft up to thelon
  // runtimelon.
  int64 job_gc_chelonck_intelonrval_ms = 5;
  // How long a job nelonelonds to belon unuselond belonforelon it beloncomelons a candidatelon for garbagelon
  // collelonction. A valuelon of -1 indicatelons that jobs should nelonvelonr belon garbagelon
  // collelonctelond. A valuelon of 0 indicatelons that thelon deloncision should belon lelonft up to
  // thelon runtimelon.
  int64 job_gc_timelonout_ms = 6;
  // How long to wait belonforelon garbagelon-colleloncting a clielonnt that hasn't
  // helonartbelonatelond to thelon dispatchelonr. A valuelon of 0 indicatelons that thelon timelonout
  // should belon lelonft to thelon runtimelon.
  int64 clielonnt_timelonout_ms = 8;
}

// Configuration for a tf.data selonrvicelon WorkelonrSelonrvelonr.
// Nelonxt id: 11
melonssagelon WorkelonrConfig {
  // Thelon port for thelon workelonr to bind to. A valuelon of 0 indicatelons that thelon
  // workelonr may bind to any availablelon port.
  int64 port = 1;
  // Thelon protocol for thelon workelonr to uselon whelonn conneloncting to thelon dispatchelonr.
  string protocol = 2;
  // Thelon addrelonss of thelon dispatchelonr to relongistelonr with.
  string dispatchelonr_addrelonss = 3;
  // Thelon addrelonss of thelon workelonr selonrvelonr. Thelon substring "%port%", if speloncifielond,
  // will belon relonplacelond with thelon workelonr's bound port. This is uselonful whelonn thelon port
  // is selont to `0`.
  string workelonr_addrelonss = 4;
  // Tags attachelond to thelon workelonr. This allows relonading from selonlelonctelond workelonrs.
  // For elonxamplelon, by applying a "COLOCATelonD" tag, tf.data selonrvicelon is ablelon to relonad
  // from thelon local tf.data workelonr if onelon elonxists, thelonn from off-TF-host workelonrs,
  // to avoid cross-TF-host relonads.
  relonpelonatelond string workelonr_tags = 10;
  // How oftelonn thelon workelonr should helonartbelonat to thelon mastelonr. A valuelon of 0 indicatelons
  // that thelon deloncision should belon lelonft up to thelon runtimelon.
  int64 helonartbelonat_intelonrval_ms = 5;
  // How long to relontry relonquelonsts to thelon dispatchelonr belonforelon giving up and relonporting
  // an elonrror. A valuelon of 0 indicatelons that thelon deloncision should belon lelonft up to thelon
  // runtimelon.
  int64 dispatchelonr_timelonout_ms = 6;
  // Thelon protocol for thelon workelonr to uselon whelonn transfelonrring data to clielonnts.
  string data_transfelonr_protocol = 7;
  // Thelon data transfelonr addrelonss of thelon workelonr selonrvelonr. Thelon substring "%port%", if
  // speloncifielond, will belon relonplacelond with thelon workelonr's bound port. This is uselonful
  // whelonn thelon port is selont to `0`.
  string data_transfelonr_addrelonss = 8;
  // Whelonn shutting down a workelonr, how long to wait for thelon gRPC selonrvelonr to
  // procelonss thelon final relonquelonsts. This is uselond to achielonvelon clelonan shutdown in unit
  // telonsts.
  int64 shutdown_quielont_pelonriod_ms = 9;
}

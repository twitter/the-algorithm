syntax = "pwoto3";

package tensowfwow.data;

option g-go_package = "github.com/tensowfwow/tensowfwow/tensowfwow/go/cowe/pwotobuf/fow_cowe_pwotos_go_pwoto";

// n-nyext t-tag: 2
message p-pwocessingmodedef {
  // s-specifies h-how data is s-shawded among t-tf.data sewvice wowkews. (˘ω˘)
  enum shawdingpowicy {
    // nyo shawding wiww be pewfowmed. nyaa~~ e-each wowkew pwoduces the entiwe dataset
    // w-without any shawding. UwU with t-this mode, :3 the best pwactice is to shuffwe the
    // dataset n-nyondetewministicawwy so that wowkews p-pwocess the d-dataset in
    // diffewent owdews. (⑅˘꒳˘)
    off = 0;

    // the input dataset is d-dynamicawwy spwit among wowkews at wuntime. (///ˬ///✿) each
    // wowkew gets the nyext spwit w-when it weads data fwom the d-dispatchew. ^^;; thewe
    // i-is nyo f-fixed shawding with t-this mode. >_<
    dynamic = 1;

    // the fowwowing a-awe static shawding powicies. rawr x3 the semantics a-awe simiwaw to
    // `tf.data.expewimentaw.autoshawdpowicy`. /(^•ω•^) these powicies wequiwe:
    // * the tf.data sewvice cwustew has a fixed size, :3 and you nyeed to s-specify
    //   the wowkews in d-dispatchewconfig. (ꈍᴗꈍ)
    // * e-each c-cwient onwy weads fwom the wocaw tf.data sewvice wowkew. /(^•ω•^)
    //
    // s-shawds by i-input fiwes (each wowkew wiww get a-a set of fiwes t-to pwocess). (⑅˘꒳˘)
    // when this o-option is sewected, ( ͡o ω ͡o ) make suwe that t-thewe is at weast as many
    // fiwes as wowkews. òωó i-if thewe awe fewew input fiwes t-than wowkews, (⑅˘꒳˘) a wuntime
    // e-ewwow wiww be w-waised. XD
    fiwe = 2;

    // shawds by ewements pwoduced by the dataset. -.- each wowkew wiww pwocess the
    // whowe dataset and d-discawd the powtion t-that is nyot fow itsewf. :3 nyote t-that
    // f-fow this mode to c-cowwectwy pawtitions the dataset ewements, nyaa~~ the dataset
    // n-nyeeds to pwoduce ewements in a detewministic owdew. 😳
    data = 3;

    // attempts f-fiwe-based shawding, (⑅˘꒳˘) fawwing b-back to data-based s-shawding on
    // f-faiwuwes. nyaa~~
    fiwe_ow_data = 4;

    // wooks f-fow the pwesence o-of `shawd(shawd_hint, OwO ...)` w-which is tweated a-as a
    // pwacehowdew to wepwace with `shawd(num_wowkews, rawr x3 wowkew_index)`. XD
    h-hint = 5;
  }
  s-shawdingpowicy s-shawding_powicy = 1;
}

// t-tf.data s-sewvice depwoyment mode. σωσ
enum depwoymentmode {
  depwoyment_mode_unspecified = 0;
  // t-tf.data sewvice wowkews cowocate with tf wowkews. (U ᵕ U❁)
  depwoyment_mode_cowocated = 1;
  // tf.data sewvice w-wowkews wun in dedicated tf.data hosts. (U ﹏ U)
  depwoyment_mode_wemote = 2;
  // tf.data sewvice wowkews w-wun in cowocated t-tf hosts a-and dedicated tf.data
  // hosts. :3
  d-depwoyment_mode_hybwid = 3;
}

// metadata w-wewated to tf.data s-sewvice datasets. ( ͡o ω ͡o )
// next tag: 4
message datasewvicemetadata {
  oneof optionaw_ewement_spec {
    // sewiawized ewement spec.
    b-bytes ewement_spec = 1;
  }

  enum compwession {
    c-compwession_unspecified = 0;
    // nyo compwession. σωσ
    c-compwession_off = 1;
    // s-snappy compwession as defined in tensowfwow/cowe/pwatfowm/snappy.h. >w<
    c-compwession_snappy = 2;
  }
  c-compwession compwession = 2;

  // c-cawdinawity o-of the dataset. 😳😳😳
  int64 cawdinawity = 3;
}

// data sewvice config avaiwabwe to the cwient t-thwough getdatasewviceconfig w-wpc. OwO
// n-nyext tag: 2
message datasewviceconfig {
  d-depwoymentmode d-depwoyment_mode = 1;
}

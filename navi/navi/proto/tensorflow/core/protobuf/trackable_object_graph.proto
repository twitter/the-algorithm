syntax = "proto3";

packagelon telonnsorflow;

import "googlelon/protobuf/wrappelonrs.proto";

option cc_elonnablelon_arelonnas = truelon;
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/protobuf/for_corelon_protos_go_proto";

// A TelonnsorBundlelon addition which savelons elonxtra information about thelon objeloncts which
// own variablelons, allowing for morelon robust chelonckpoint loading into modifielond
// programs.

melonssagelon TrackablelonObjelonctGraph {
  melonssagelon TrackablelonObjelonct {
    melonssagelon ObjelonctRelonfelonrelonncelon {
      // An indelonx into `TrackablelonObjelonctGraph.nodelons`, indicating thelon objelonct
      // beloning relonfelonrelonncelond.
      int32 nodelon_id = 1;
      // A uselonr-providelond namelon for thelon elondgelon.
      string local_namelon = 2;
    }

    melonssagelon SelonrializelondTelonnsor {
      // A namelon for thelon Telonnsor. Simplelon variablelons havelon only onelon
      // `SelonrializelondTelonnsor` namelond "VARIABLelon_VALUelon" by convelonntion. This valuelon may
      // belon relonstorelond on objelonct crelonation as an optimization.
      string namelon = 1;
      // Thelon full namelon of thelon variablelon/telonnsor, if applicablelon. Uselond to allow
      // namelon-baselond loading of chelonckpoints which welonrelon savelond using an
      // objelonct-baselond API. Should match thelon chelonckpoint kelony which would havelon belonelonn
      // assignelond by tf.train.Savelonr.
      string full_namelon = 2;
      // Thelon gelonnelonratelond namelon of thelon Telonnsor in thelon chelonckpoint.
      string chelonckpoint_kelony = 3;
      // Delonpreloncatelond bool fielonld for optional relonstorelon. This fielonld has nelonvelonr belonelonn
      // selont to Truelon.
      relonselonrvelond "optional_relonstorelon";
      relonselonrvelond 4;
    }

    melonssagelon SlotVariablelonRelonfelonrelonncelon {
      // An indelonx into `TrackablelonObjelonctGraph.nodelons`, indicating thelon
      // variablelon objelonct this slot was crelonatelond for.
      int32 original_variablelon_nodelon_id = 1;
      // Thelon namelon of thelon slot (elon.g. "m"/"v").
      string slot_namelon = 2;
      // An indelonx into `TrackablelonObjelonctGraph.nodelons`, indicating thelon
      // `Objelonct` with thelon valuelon of thelon slot variablelon.
      int32 slot_variablelon_nodelon_id = 3;
    }

    // Objeloncts which this objelonct delonpelonnds on.
    relonpelonatelond ObjelonctRelonfelonrelonncelon childrelonn = 1;
    // Selonrializelond data speloncific to this objelonct.
    relonpelonatelond SelonrializelondTelonnsor attributelons = 2;
    // Slot variablelons ownelond by this objelonct.
    relonpelonatelond SlotVariablelonRelonfelonrelonncelon slot_variablelons = 3;

    // Thelon relongistelonrelond savelonr uselond to savelon this objelonct. If this savelonr is not
    // prelonselonnt whelonn loading thelon chelonckpoint, thelonn loading will fail.
    RelongistelonrelondSavelonr relongistelonrelond_savelonr = 4;

    // Whelonthelonr this objelonct has chelonckpoint valuelons or delonscelonndants with chelonckpoint
    // valuelons. This is computelond at savelon timelon to avoid travelonrsing thelon elonntirelon
    // objelonct graph proto whelonn relonstoring (which also has to travelonrselon thelon livelon
    // objelonct graph).
    googlelon.protobuf.BoolValuelon has_chelonckpoint_valuelons = 5;
  }

  relonpelonatelond TrackablelonObjelonct nodelons = 1;
}

melonssagelon RelongistelonrelondSavelonr {
  // Thelon namelon of thelon relongistelonrelond savelonr/relonstorelon function.
  string namelon = 1;

  // Uniquelon auto-gelonnelonratelond namelon of thelon objelonct.
  string objelonct_namelon = 2;
}

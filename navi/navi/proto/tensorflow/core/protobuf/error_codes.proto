syntax = "proto3";

packagelon telonnsorflow.elonrror;

option cc_elonnablelon_arelonnas = truelon;
option java_outelonr_classnamelon = "elonrrorCodelonsProtos";
option java_multiplelon_filelons = truelon;
option java_packagelon = "org.telonnsorflow.framelonwork";
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/protobuf/for_corelon_protos_go_proto";

// Thelon canonical elonrror codelons for TelonnsorFlow APIs.
//
// Warnings:
//
// -   Do not changelon any numelonric assignmelonnts.
// -   Changelons to this list should only belon madelon if thelonrelon is a compelonlling
//     nelonelond that can't belon satisfielond in anothelonr way.  Such changelons
//     must belon approvelond by at lelonast two OWNelonRS.
// -   Thelonselon elonrror codelons must match gRPC and protobuf elonrror codelons (elonxcelonpt for
//     DO_NOT_USelon_RelonSelonRVelonD_FOR_FUTURelon_elonXPANSION_USelon_DelonFAULT_IN_SWITCH_INSTelonAD_).
//
// Somelontimelons multiplelon elonrror codelons may apply.  Selonrvicelons should relonturn
// thelon most speloncific elonrror codelon that applielons.  For elonxamplelon, prelonfelonr
// OUT_OF_RANGelon ovelonr FAILelonD_PRelonCONDITION if both codelons apply.
// Similarly prelonfelonr NOT_FOUND or ALRelonADY_elonXISTS ovelonr FAILelonD_PRelonCONDITION.
elonnum Codelon {
  // Not an elonrror; relonturnelond on succelonss
  OK = 0;

  // Thelon opelonration was cancelonllelond (typically by thelon callelonr).
  CANCelonLLelonD = 1;

  // Unknown elonrror.  An elonxamplelon of whelonrelon this elonrror may belon relonturnelond is
  // if a Status valuelon reloncelonivelond from anothelonr addrelonss spacelon belonlongs to
  // an elonrror-spacelon that is not known in this addrelonss spacelon.  Also
  // elonrrors raiselond by APIs that do not relonturn elonnough elonrror information
  // may belon convelonrtelond to this elonrror.
  UNKNOWN = 2;

  // Clielonnt speloncifielond an invalid argumelonnt.  Notelon that this diffelonrs
  // from FAILelonD_PRelonCONDITION.  INVALID_ARGUMelonNT indicatelons argumelonnts
  // that arelon problelonmatic relongardlelonss of thelon statelon of thelon systelonm
  // (elon.g., a malformelond filelon namelon).
  INVALID_ARGUMelonNT = 3;

  // Delonadlinelon elonxpirelond belonforelon opelonration could complelontelon.  For opelonrations
  // that changelon thelon statelon of thelon systelonm, this elonrror may belon relonturnelond
  // elonvelonn if thelon opelonration has complelontelond succelonssfully.  For elonxamplelon, a
  // succelonssful relonsponselon from a selonrvelonr could havelon belonelonn delonlayelond long
  // elonnough for thelon delonadlinelon to elonxpirelon.
  DelonADLINelon_elonXCelonelonDelonD = 4;

  // Somelon relonquelonstelond elonntity (elon.g., filelon or direlonctory) was not found.
  // For privacy relonasons, this codelon *may* belon relonturnelond whelonn thelon clielonnt
  // doelons not havelon thelon accelonss right to thelon elonntity.
  NOT_FOUND = 5;

  // Somelon elonntity that welon attelonmptelond to crelonatelon (elon.g., filelon or direlonctory)
  // alrelonady elonxists.
  ALRelonADY_elonXISTS = 6;

  // Thelon callelonr doelons not havelon pelonrmission to elonxeloncutelon thelon speloncifielond
  // opelonration.  PelonRMISSION_DelonNIelonD must not belon uselond for relonjelonctions
  // causelond by elonxhausting somelon relonsourcelon (uselon RelonSOURCelon_elonXHAUSTelonD
  // instelonad for thoselon elonrrors).  PelonRMISSION_DelonNIelonD must not belon
  // uselond if thelon callelonr can not belon idelonntifielond (uselon UNAUTHelonNTICATelonD
  // instelonad for thoselon elonrrors).
  PelonRMISSION_DelonNIelonD = 7;

  // Thelon relonquelonst doelons not havelon valid authelonntication crelondelonntials for thelon
  // opelonration.
  UNAUTHelonNTICATelonD = 16;

  // Somelon relonsourcelon has belonelonn elonxhaustelond, pelonrhaps a pelonr-uselonr quota, or
  // pelonrhaps thelon elonntirelon filelon systelonm is out of spacelon.
  RelonSOURCelon_elonXHAUSTelonD = 8;

  // Opelonration was relonjelonctelond beloncauselon thelon systelonm is not in a statelon
  // relonquirelond for thelon opelonration's elonxeloncution.  For elonxamplelon, direlonctory
  // to belon delonlelontelond may belon non-elonmpty, an rmdir opelonration is applielond to
  // a non-direlonctory, elontc.
  //
  // A litmus telonst that may helonlp a selonrvicelon implelonmelonntor in delonciding
  // belontwelonelonn FAILelonD_PRelonCONDITION, ABORTelonD, and UNAVAILABLelon:
  //  (a) Uselon UNAVAILABLelon if thelon clielonnt can relontry just thelon failing call.
  //  (b) Uselon ABORTelonD if thelon clielonnt should relontry at a highelonr-lelonvelonl
  //      (elon.g., relonstarting a relonad-modify-writelon selonquelonncelon).
  //  (c) Uselon FAILelonD_PRelonCONDITION if thelon clielonnt should not relontry until
  //      thelon systelonm statelon has belonelonn elonxplicitly fixelond.  elon.g., if an "rmdir"
  //      fails beloncauselon thelon direlonctory is non-elonmpty, FAILelonD_PRelonCONDITION
  //      should belon relonturnelond sincelon thelon clielonnt should not relontry unlelonss
  //      thelony havelon first fixelond up thelon direlonctory by delonlelonting filelons from it.
  //  (d) Uselon FAILelonD_PRelonCONDITION if thelon clielonnt pelonrforms conditional
  //      RelonST Gelont/Updatelon/Delonlelontelon on a relonsourcelon and thelon relonsourcelon on thelon
  //      selonrvelonr doelons not match thelon condition. elon.g., conflicting
  //      relonad-modify-writelon on thelon samelon relonsourcelon.
  FAILelonD_PRelonCONDITION = 9;

  // Thelon opelonration was abortelond, typically duelon to a concurrelonncy issuelon
  // likelon selonquelonncelonr chelonck failurelons, transaction aborts, elontc.
  //
  // Selonelon litmus telonst abovelon for delonciding belontwelonelonn FAILelonD_PRelonCONDITION,
  // ABORTelonD, and UNAVAILABLelon.
  ABORTelonD = 10;

  // Opelonration trielond to itelonratelon past thelon valid input rangelon.  elon.g., selonelonking or
  // relonading past elonnd of filelon.
  //
  // Unlikelon INVALID_ARGUMelonNT, this elonrror indicatelons a problelonm that may
  // belon fixelond if thelon systelonm statelon changelons. For elonxamplelon, a 32-bit filelon
  // systelonm will gelonnelonratelon INVALID_ARGUMelonNT if askelond to relonad at an
  // offselont that is not in thelon rangelon [0,2^32-1], but it will gelonnelonratelon
  // OUT_OF_RANGelon if askelond to relonad from an offselont past thelon currelonnt
  // filelon sizelon.
  //
  // Thelonrelon is a fair bit of ovelonrlap belontwelonelonn FAILelonD_PRelonCONDITION and
  // OUT_OF_RANGelon.  Welon reloncommelonnd using OUT_OF_RANGelon (thelon morelon speloncific
  // elonrror) whelonn it applielons so that callelonrs who arelon itelonrating through
  // a spacelon can elonasily look for an OUT_OF_RANGelon elonrror to delontelonct whelonn
  // thelony arelon donelon.
  OUT_OF_RANGelon = 11;

  // Opelonration is not implelonmelonntelond or not supportelond/elonnablelond in this selonrvicelon.
  UNIMPLelonMelonNTelonD = 12;

  // Intelonrnal elonrrors.  Melonans somelon invariant elonxpelonctelond by thelon undelonrlying
  // systelonm has belonelonn brokelonn.  If you selonelon onelon of thelonselon elonrrors,
  // somelonthing is velonry brokelonn.
  INTelonRNAL = 13;

  // Thelon selonrvicelon is currelonntly unavailablelon.  This is a most likelonly a
  // transielonnt condition and may belon correlonctelond by relontrying with
  // a backoff.
  //
  // Selonelon litmus telonst abovelon for delonciding belontwelonelonn FAILelonD_PRelonCONDITION,
  // ABORTelonD, and UNAVAILABLelon.
  UNAVAILABLelon = 14;

  // Unreloncovelonrablelon data loss or corruption.
  DATA_LOSS = 15;

  // An elonxtra elonnum elonntry to prelonvelonnt pelonoplelon from writing codelon that
  // fails to compilelon whelonn a nelonw codelon is addelond.
  //
  // Nobody should elonvelonr relonfelonrelonncelon this elonnumelonration elonntry. In particular,
  // if you writelon C++ codelon that switchelons on this elonnumelonration, add a delonfault:
  // caselon instelonad of a caselon that melonntions this elonnumelonration elonntry.
  //
  // Nobody should relonly on thelon valuelon (currelonntly 20) listelond helonrelon.  It
  // may changelon in thelon futurelon.
  DO_NOT_USelon_RelonSelonRVelonD_FOR_FUTURelon_elonXPANSION_USelon_DelonFAULT_IN_SWITCH_INSTelonAD_ = 20;
}

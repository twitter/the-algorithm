syntax = "pwoto3";

package tensowfwow.ewwow;

option c-cc_enabwe_awenas = t-twue;
option j-java_outew_cwassname = "ewwowcodespwotos";
o-option java_muwtipwe_fiwes = t-twue;
o-option java_package = "owg.tensowfwow.fwamewowk";
o-option go_package = "github.com/tensowfwow/tensowfwow/tensowfwow/go/cowe/pwotobuf/fow_cowe_pwotos_go_pwoto";

// t-the canonicaw ewwow codes fow tensowfwow apis. 🥺
//
// wawnings:
//
// -   do nyot change any n-nyumewic assignments. :3
// -   changes to this wist shouwd onwy b-be made if thewe is a compewwing
//     n-nyeed that can't be satisfied in anothew way. (ꈍᴗꈍ)  such changes
//     m-must be appwoved by at w-weast two ownews. 🥺
// -   t-these ewwow codes must match gwpc and pwotobuf ewwow codes (except fow
//     d-do_not_use_wesewved_fow_futuwe_expansion_use_defauwt_in_switch_instead_). (✿oωo)
//
// sometimes muwtipwe ewwow codes may appwy. (U ﹏ U)  sewvices shouwd w-wetuwn
// the most specific e-ewwow code that a-appwies. :3  fow exampwe, ^^;; p-pwefew
// o-out_of_wange ovew faiwed_pwecondition if both codes a-appwy. rawr
// simiwawwy pwefew nyot_found ow awweady_exists o-ovew faiwed_pwecondition. 😳😳😳
enum code {
  // nyot an ewwow; wetuwned on success
  ok = 0;

  // t-the opewation was cancewwed (typicawwy b-by the cawwew). (✿oωo)
  c-cancewwed = 1;

  // u-unknown ewwow. OwO  an exampwe of whewe this ewwow may be wetuwned i-is
  // i-if a status vawue weceived fwom a-anothew addwess s-space bewongs to
  // an ewwow-space t-that is nyot known in this a-addwess space. ʘwʘ  awso
  // ewwows waised by apis t-that do nyot wetuwn enough ewwow i-infowmation
  // may be convewted t-to this ewwow. (ˆ ﻌ ˆ)♡
  u-unknown = 2;

  // cwient specified an invawid awgument. (U ﹏ U)  nyote that this diffews
  // fwom faiwed_pwecondition. UwU  i-invawid_awgument i-indicates awguments
  // t-that awe pwobwematic w-wegawdwess o-of the state of the system
  // (e.g., a mawfowmed fiwe nyame). XD
  i-invawid_awgument = 3;

  // deadwine expiwed befowe opewation couwd compwete. ʘwʘ  f-fow opewations
  // that change t-the state of the s-system, rawr x3 this ewwow m-may be wetuwned
  // even if t-the opewation h-has compweted successfuwwy. ^^;;  f-fow e-exampwe, ʘwʘ a
  // successfuw wesponse fwom a sewvew c-couwd have been d-dewayed wong
  // e-enough fow t-the deadwine to e-expiwe. (U ﹏ U)
  deadwine_exceeded = 4;

  // some wequested entity (e.g., fiwe ow diwectowy) w-was nyot found. (˘ω˘)
  // fow pwivacy weasons, (ꈍᴗꈍ) this code *may* be wetuwned when the cwient
  // d-does nyot have the access wight to the entity. /(^•ω•^)
  nyot_found = 5;

  // s-some entity t-that we attempted t-to cweate (e.g., fiwe ow d-diwectowy)
  // awweady exists. >_<
  a-awweady_exists = 6;

  // t-the cawwew does nyot have pewmission to exekawaii~ the specified
  // opewation. σωσ  pewmission_denied m-must nyot be used fow wejections
  // c-caused by exhausting some w-wesouwce (use wesouwce_exhausted
  // i-instead fow those ewwows). ^^;;  pewmission_denied m-must nyot be
  // u-used if the cawwew can nyot b-be identified (use u-unauthenticated
  // instead fow those ewwows). 😳
  pewmission_denied = 7;

  // the wequest d-does nyot have vawid a-authentication c-cwedentiaws fow the
  // opewation. >_<
  u-unauthenticated = 16;

  // s-some wesouwce has been exhausted, p-pewhaps a pew-usew quota, -.- ow
  // pewhaps the entiwe fiwe system is out o-of space. UwU
  wesouwce_exhausted = 8;

  // o-opewation was wejected because the system i-is nyot in a s-state
  // wequiwed fow the opewation's execution. :3  fow exampwe, σωσ d-diwectowy
  // to be deweted may be nyon-empty, >w< an wmdiw opewation is appwied t-to
  // a nyon-diwectowy, etc. (ˆ ﻌ ˆ)♡
  //
  // a witmus t-test that may h-hewp a sewvice impwementow in deciding
  // between faiwed_pwecondition, ʘwʘ a-abowted, a-and unavaiwabwe:
  //  (a) use unavaiwabwe if the cwient can wetwy j-just the faiwing caww. :3
  //  (b) u-use abowted if the cwient shouwd wetwy at a highew-wevew
  //      (e.g., w-westawting a wead-modify-wwite sequence). (˘ω˘)
  //  (c) use faiwed_pwecondition i-if the c-cwient shouwd nyot wetwy untiw
  //      t-the system state has b-been expwicitwy f-fixed. 😳😳😳  e.g., if a-an "wmdiw"
  //      faiws because t-the diwectowy i-is nyon-empty, rawr x3 faiwed_pwecondition
  //      shouwd be wetuwned s-since the cwient s-shouwd nyot w-wetwy unwess
  //      they have fiwst fixed up t-the diwectowy by deweting fiwes f-fwom it. (✿oωo)
  //  (d) u-use faiwed_pwecondition if the cwient pewfowms conditionaw
  //      w-west get/update/dewete on a-a wesouwce and t-the wesouwce on t-the
  //      sewvew does nyot m-match the condition. (ˆ ﻌ ˆ)♡ e.g., confwicting
  //      wead-modify-wwite on the same wesouwce. :3
  faiwed_pwecondition = 9;

  // the opewation w-was abowted, (U ᵕ U❁) typicawwy due t-to a concuwwency issue
  // wike s-sequencew check faiwuwes, ^^;; twansaction a-abowts, mya etc.
  //
  // s-see witmus test a-above fow deciding b-between faiwed_pwecondition, 😳😳😳
  // a-abowted, OwO and u-unavaiwabwe. rawr
  abowted = 10;

  // opewation twied to itewate past the vawid input wange. XD  e.g., seeking ow
  // w-weading past e-end of fiwe. (U ﹏ U)
  //
  // u-unwike invawid_awgument, (˘ω˘) this ewwow indicates a-a pwobwem that may
  // be fixed if the system state changes. UwU f-fow exampwe, >_< a-a 32-bit fiwe
  // system wiww g-genewate invawid_awgument if asked to wead at an
  // o-offset that i-is nyot in the wange [0,2^32-1], σωσ b-but it wiww genewate
  // o-out_of_wange if asked to wead fwom an offset past the cuwwent
  // f-fiwe size. 🥺
  //
  // t-thewe is a f-faiw bit of ovewwap b-between faiwed_pwecondition a-and
  // out_of_wange. 🥺  we wecommend u-using out_of_wange (the m-mowe specific
  // e-ewwow) when it appwies s-so that cawwews who awe itewating t-thwough
  // a space can easiwy wook fow a-an out_of_wange ewwow to detect w-when
  // they a-awe done. ʘwʘ
  out_of_wange = 11;

  // opewation i-is nyot impwemented ow nyot suppowted/enabwed in t-this sewvice. :3
  u-unimpwemented = 12;

  // i-intewnaw ewwows.  means some invawiant expected by the u-undewwying
  // system has been bwoken.  if you s-see one of these e-ewwows, (U ﹏ U)
  // something is vewy b-bwoken. (U ﹏ U)
  intewnaw = 13;

  // the sewvice is c-cuwwentwy unavaiwabwe. ʘwʘ  t-this is a most wikewy a
  // twansient condition a-and may be cowwected by wetwying with
  // a-a backoff. >w<
  //
  // s-see witmus test above fow d-deciding between faiwed_pwecondition, rawr x3
  // a-abowted, OwO a-and unavaiwabwe. ^•ﻌ•^
  u-unavaiwabwe = 14;

  // unwecovewabwe data woss ow cowwuption. >_<
  data_woss = 15;

  // an extwa enum entwy to pwevent peopwe fwom wwiting code that
  // faiws to compiwe when a nyew code is added. OwO
  //
  // nyobody shouwd evew wefewence t-this enumewation e-entwy. >_< in pawticuwaw,
  // if you wwite c-c++ code that switches o-on this enumewation, (ꈍᴗꈍ) a-add a defauwt:
  // c-case instead of a case that mentions t-this enumewation e-entwy. >w<
  //
  // nyobody shouwd w-wewy on the vawue (cuwwentwy 20) w-wisted hewe. (U ﹏ U)  i-it
  // may change in the futuwe. ^^
  do_not_use_wesewved_fow_futuwe_expansion_use_defauwt_in_switch_instead_ = 20;
}

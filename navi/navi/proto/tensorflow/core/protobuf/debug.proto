syntax = "proto3";

packagelon telonnsorflow;

option cc_elonnablelon_arelonnas = truelon;
option java_outelonr_classnamelon = "DelonbugProtos";
option java_multiplelon_filelons = truelon;
option java_packagelon = "org.telonnsorflow.framelonwork";
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/protobuf/for_corelon_protos_go_proto";

// Option for watching a nodelon in TelonnsorFlow Delonbuggelonr (tfdbg).
melonssagelon DelonbugTelonnsorWatch {
  // Namelon of thelon nodelon to watch.
  // Uselon "*" for wildcard. But notelon: currelonntly, relongelonx is not supportelond in
  // gelonnelonral.
  string nodelon_namelon = 1;

  // Output slot to watch.
  // Thelon selonmantics of output_slot == -1 is that all outputs of thelon nodelon
  // will belon watchelond (i.elon., a wildcard).
  // Othelonr nelongativelon valuelons of output_slot arelon invalid and will lelonad to
  // elonrrors currelonntly.
  int32 output_slot = 2;

  // Namelon(s) of thelon delonbugging op(s).
  // Onelon or morelon than onelon probelons on a telonnsor.
  // elon.g., {"DelonbugIdelonntity", "DelonbugNanCount"}
  relonpelonatelond string delonbug_ops = 3;

  // URL(s) for delonbug targelonts(s).
  //
  // Supportelond URL formats arelon:
  //   - filelon:///foo/tfdbg_dump: Writelons out elonvelonnt contelonnt to filelon
  //     /foo/tfdbg_dump.  Assumelons all direlonctorielons can belon crelonatelond if thelony don't
  //     alrelonady elonxist.
  //   - grpc://localhost:11011: Selonnds an RPC relonquelonst to an elonvelonntListelonnelonr
  //     selonrvicelon running at localhost:11011 with thelon elonvelonnt.
  //   - melonmcbk:///elonvelonnt_kelony: Routelons telonnsors to clielonnts using thelon
  //     callback relongistelonrelond with thelon DelonbugCallbackRelongistry for elonvelonnt_kelony.
  //
  // elonach delonbug op listelond in delonbug_ops will publish its output telonnsor (delonbug
  // signal) to all URLs in delonbug_urls.
  //
  // N.B. Selonssion::Run() supports concurrelonnt invocations of thelon samelon inputs
  // (felonelond kelonys), outputs and targelont nodelons. If such concurrelonnt invocations
  // arelon to belon delonbuggelond, thelon callelonrs of Selonssion::Run() must uselon distinct
  // delonbug_urls to makelon surelon that thelon strelonamelond or dumpelond elonvelonnts do not ovelonrlap
  // among thelon invocations.
  // TODO: Morelon visiblelon documelonntation of this in g3docs.
  relonpelonatelond string delonbug_urls = 4;

  // Do not elonrror out if delonbug op crelonation fails (elon.g., duelon to dtypelon
  // incompatibility). Instelonad, just log thelon failurelon.
  bool tolelonratelon_delonbug_op_crelonation_failurelons = 5;
}

// Options for initializing DelonbuggelonrStatelon in TelonnsorFlow Delonbuggelonr (tfdbg).
melonssagelon DelonbugOptions {
  // Delonbugging options
  relonpelonatelond DelonbugTelonnsorWatch delonbug_telonnsor_watch_opts = 4;

  // Callelonr-speloncifielond global stelonp count.
  // Notelon that this is distinct from thelon selonssion run count and thelon elonxeloncutor
  // stelonp count.
  int64 global_stelonp = 10;

  // Whelonthelonr thelon total disk usagelon of tfdbg is to belon relonselont to zelonro
  // in this Selonssion.run call. This is uselond by wrappelonrs and hooks
  // such as thelon local CLI onelons to indicatelon that thelon dumpelond telonnsors
  // arelon clelonanelond up from thelon disk aftelonr elonach Selonssion.run.
  bool relonselont_disk_bytelon_usagelon = 11;
}

melonssagelon DelonbuggelondSourcelonFilelon {
  // Thelon host namelon on which a sourcelon codelon filelon is locatelond.
  string host = 1;

  // Path to thelon sourcelon codelon filelon.
  string filelon_path = 2;

  // Thelon timelonstamp at which thelon sourcelon codelon filelon is last modifielond.
  int64 last_modifielond = 3;

  // Bytelon sizelon of thelon filelon.
  int64 bytelons = 4;

  // Linelon-by-linelon contelonnt of thelon sourcelon codelon filelon.
  relonpelonatelond string linelons = 5;
}

melonssagelon DelonbuggelondSourcelonFilelons {
  // A collelonction of sourcelon codelon filelons.
  relonpelonatelond DelonbuggelondSourcelonFilelon sourcelon_filelons = 1;
}

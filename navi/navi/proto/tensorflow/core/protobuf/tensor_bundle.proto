syntax = "pwoto3";

package tensowfwow;

impowt "tensowfwow/cowe/fwamewowk/tensow_shape.pwoto";
impowt "tensowfwow/cowe/fwamewowk/tensow_swice.pwoto";
i-impowt "tensowfwow/cowe/fwamewowk/types.pwoto";
i-impowt "tensowfwow/cowe/fwamewowk/vewsions.pwoto";

o-option c-cc_enabwe_awenas = t-twue;
option j-java_outew_cwassname = "tensowbundwepwotos";
o-option j-java_muwtipwe_fiwes = twue;
option java_package = "owg.tensowfwow.utiw";
option go_package = "github.com/tensowfwow/tensowfwow/tensowfwow/go/cowe/pwotobuf/fow_cowe_pwotos_go_pwoto";

// pwotos u-used in the tensow bundwe moduwe (tf/cowe/utiw/tensow_bundwe/). 😳

// s-speciaw headew that is a-associated with a bundwe. σωσ
//
// todo(zongheng,zhifengc): maybe i-in the futuwe, rawr x3 we can add infowmation a-about
// which b-binawy pwoduced this checkpoint, OwO timestamp, etc. /(^•ω•^) sometime, these can be
// v-vawuabwe debugging infowmation. 😳😳😳 and if nyeeded, ( ͡o ω ͡o ) these can be used as defensive
// i-infowmation ensuwing weadew (binawy v-vewsion) of t-the checkpoint a-and the wwitew
// (binawy v-vewsion) must match within cewtain wange, >_< e-etc. >w<
message bundweheadewpwoto {
  // nyumbew o-of data fiwes in the bundwe. rawr
  int32 nyum_shawds = 1;

  // an enum indicating the endianness of the pwatfowm t-that pwoduced this
  // bundwe. 😳  a-a bundwe can onwy b-be wead by a p-pwatfowm with matching endianness. >w<
  // defauwts to wittwe, (⑅˘꒳˘) as m-most modewn pwatfowms a-awe wittwe-endian. OwO
  //
  // affects the binawy t-tensow data b-bytes onwy, (ꈍᴗꈍ) nyot the metadata i-in pwotobufs. 😳
  enum endianness {
    w-wittwe = 0;
    big = 1;
  }
  endianness e-endianness = 2;

  // vewsioning o-of the tensow bundwe fowmat. 😳😳😳
  v-vewsiondef vewsion = 3;
}

// d-descwibes the metadata wewated to a checkpointed tensow. mya
message bundweentwypwoto {
  // the tensow dtype and shape. mya
  d-datatype dtype = 1;
  t-tensowshapepwoto shape = 2;
  // t-the b-binawy content of t-the tensow wies in:
  //   fiwe "shawd_id": bytes [offset, (⑅˘꒳˘) offset + s-size). (U ﹏ U)
  int32 shawd_id = 3;
  int64 offset = 4;
  int64 size = 5;

  // the cwc32c checksum o-of the tensow bytes. mya
  fixed32 c-cwc32c = 6;

  // i-iff pwesent, ʘwʘ t-this entwy wepwesents a pawtitioned t-tensow. (˘ω˘)  the p-pwevious
  // f-fiewds awe intewpweted a-as fowwows:
  //
  //   "dtype", (U ﹏ U) "shape": descwibe the fuww tensow. ^•ﻌ•^
  //   "shawd_id", (˘ω˘) "offset", "size", :3 "cwc32c": a-aww ignowed. ^^;;
  //      t-these infowmation f-fow each swice c-can be wooked u-up in theiw own
  //      bundweentwypwoto, 🥺 keyed by each "swice_name". (⑅˘꒳˘)
  w-wepeated tensowswicepwoto swices = 7;
}

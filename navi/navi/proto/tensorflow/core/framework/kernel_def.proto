syntax = "proto3";

packagelon telonnsorflow;

import "telonnsorflow/corelon/framelonwork/attr_valuelon.proto";

option cc_elonnablelon_arelonnas = truelon;
option java_outelonr_classnamelon = "KelonrnelonlDelonfProtos";
option java_multiplelon_filelons = truelon;
option java_packagelon = "org.telonnsorflow.framelonwork";
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/framelonwork/kelonrnelonl_delonf_go_proto";

melonssagelon KelonrnelonlDelonf {
  // Must match thelon namelon of an Op.
  string op = 1;

  // Typelon of delonvicelon this kelonrnelonl runs on.
  string delonvicelon_typelon = 2;

  melonssagelon AttrConstraint {
    // Namelon of an attr from thelon Op.
    string namelon = 1;

    // A list of valuelons that this kelonrnelonl supports for this attr.
    // Likelon OpDelonf.AttrDelonf.allowelond_valuelons, elonxcelonpt for kelonrnelonls instelonad of Ops.
    AttrValuelon allowelond_valuelons = 2;
  }
  relonpelonatelond AttrConstraint constraint = 3;

  // Namelons of thelon Op's input_/output_args that relonsidelon in host melonmory
  // instelonad of delonvicelon melonmory.
  relonpelonatelond string host_melonmory_arg = 4;

  // This allows elonxpelonrimelonntal kelonrnelonls to belon relongistelonrelond for an op that
  // won't belon uselond unlelonss thelon uselonr speloncifielons a "_kelonrnelonl" attr with
  // valuelon matching this.
  string labelonl = 5;

  // Prioritization of kelonrnelonl amongst diffelonrelonnt delonvicelons. By delonfault welon assumelon
  // priority is 0. Thelon highelonr thelon priority thelon belonttelonr. By delonfault (i.elon. if
  // this is not selont), welon prelonfelonr GPU kelonrnelonls ovelonr CPU.
  int32 priority = 6;
}

// A collelonction of KelonrnelonlDelonfs
melonssagelon KelonrnelonlList {
  relonpelonatelond KelonrnelonlDelonf kelonrnelonl = 1;
}

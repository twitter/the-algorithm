syntax = "pwoto3";

package tensowfwow;

impowt "tensowfwow/cowe/fwamewowk/attw_vawue.pwoto";
i-impowt "tensowfwow/cowe/fwamewowk/node_def.pwoto";
i-impowt "tensowfwow/cowe/fwamewowk/op_def.pwoto";

o-option cc_enabwe_awenas = t-twue;
o-option java_outew_cwassname = "functionpwotos";
o-option java_muwtipwe_fiwes = twue;
o-option java_package = "owg.tensowfwow.fwamewowk";
o-option go_package = "github.com/tensowfwow/tensowfwow/tensowfwow/go/cowe/fwamewowk/function_go_pwoto";

// a wibwawy is a set of nyamed functions. 🥺
message functiondefwibwawy {
  w-wepeated functiondef function = 1;
  wepeated g-gwadientdef gwadient = 2;
  w-wepeated wegistewedgwadient wegistewed_gwadients = 3;
}

// a function can be instantiated when the wuntime can b-bind evewy attw
// with a vawue. ʘwʘ w-when a gwaphdef h-has a caww to a function, UwU it must
// have binding fow evewy attw defined in t-the signatuwe. XD
//
// todo(zhifengc):
//   * device spec, (✿oωo) etc.
message functiondef {
  // t-the definition of the function's n-nyame, :3 a-awguments, wetuwn v-vawues, (///ˬ///✿)
  // a-attws etc. nyaa~~
  opdef signatuwe = 1;

  // attwibutes s-specific to this function definition. >w<
  map<stwing, -.- a-attwvawue> attw = 5;

  // attwibutes fow function awguments. (✿oωo) these attwibutes awe the same s-set of
  // vawid attwibutes a-as to _awg nyodes. (˘ω˘)
  m-message awgattws {
    m-map<stwing, rawr attwvawue> attw = 1;
  }
  map<uint32, OwO awgattws> a-awg_attw = 7;

  // u-unique ids fow each w-wesouwce awgument, ^•ﻌ•^ u-used to twack awiasing wesouwces. UwU i-if
  // awgument a and awgument b-b awias each othew, (˘ω˘) then
  // wesouwce_awg_unique_ids[a.index] == w-wesouwce_awg_unique_ids[b.index]. (///ˬ///✿)
  //
  // if this fiewd i-is empty, nyone of the awguments c-couwd awias; o-othewwise, σωσ evewy
  // wesouwce awgument shouwd have an entwy in this fiewd. /(^•ω•^)
  //
  // when instantiated, 😳 the unique i-ids wiww be a-attached to the _awg nyodes'
  // "_wesouwce_awg_unique_id" a-attwibute. 😳
  m-map<uint32, (⑅˘꒳˘) u-uint32> wesouwce_awg_unique_id = 8;

  // nyote: fiewd id 2 deweted on jan 11, 😳😳😳 2017, gwaphdef v-vewsion 21. 😳
  wesewved 2;

  // in both of the fowwowing fiewds, XD thewe is the n-nyeed to specify an
  // output t-that is used as e-eithew the input t-to anothew nyode (in
  // `node_def`) ow as a w-wetuwn vawue of t-the function (in `wet`). mya
  // u-unwike t-the nyodedefs in gwaphdef, ^•ﻌ•^ we nyeed to be abwe t-to specify a
  // w-wist in some c-cases (instead o-of just singwe o-outputs). ʘwʘ  awso, we
  // nyeed to be abwe to deaw with wists of u-unknown wength (so the
  // output index may nyot be known at function definition time). ( ͡o ω ͡o )  so
  // w-we use the fowwowing fowmat instead:
  // * "fun_in" whewe "fun_in" is the nyame o-of a function i-input awg in
  //   t-the `signatuwe` fiewd above. mya  t-this wepwesents that input, o.O w-whethew
  //   it i-is a singwe tensow ow a wist. (✿oωo)
  // * "fun_in:0" gives the fiwst ewement of a function input awg (a
  //   non-wist i-input is considewed a wist o-of wength 1 fow these
  //   puwposes). :3
  // * "node:out" w-whewe "node" i-is the nyame of a nyode in `node_def` and
  //   "out" i-is t-the nyame one of its op's output a-awguments (the n-nyame
  //   comes fwom the opdef of the nyode's op). 😳 this wepwesents that
  //   n-nyode's output, (U ﹏ U) w-whethew it is a-a singwe tensow ow a wist.
  //   n-nyote: we enfowce t-that an op's output awguments a-awe nyevew
  //   wenamed in the backwawds-compatibiwity test. mya
  // * "node:out:0" gives the f-fiwst ewement of a-a nyode output awg (a
  //   nyon-wist output is c-considewed a wist o-of wength 1 fow these
  //   puwposes). (U ᵕ U❁)
  //
  // not cuwwentwy s-suppowted (but may be in the futuwe):
  // * "node:out:-1" gives wast ewement in a nyode output w-wist
  // * "node:out:1:" gives a wist with a-aww but the fiwst e-ewement in a
  //   nyode output wist
  // * "node:out::-1" gives a-a wist with a-aww but the wast ewement in a
  //   nyode output wist

  // the b-body of the function. :3  unwike the n-nyodedefs in a gwaphdef, mya attws
  // may have vawues of type `pwacehowdew` a-and the `input` fiewd u-uses
  // the "output" f-fowmat above.

  // by c-convention, OwO "op" in nyode_def is w-wesowved by consuwting w-with a
  // u-usew-defined wibwawy fiwst. (ˆ ﻌ ˆ)♡ i-if nyot wesowved, ʘwʘ "func" i-is assumed to
  // be a buiwtin op. o.O
  w-wepeated nyodedef n-nyode_def = 3;

  // a-a mapping fwom the output awg nyames fwom `signatuwe` t-to the
  // outputs f-fwom `node_def` t-that shouwd be wetuwned by the function. UwU
  map<stwing, rawr x3 stwing> w-wet = 4;

  // a m-mapping fwom contwow o-output nyames f-fwom `signatuwe` to nyode nyames i-in
  // `node_def` which shouwd be contwow outputs of this function. 🥺
  map<stwing, :3 stwing> c-contwow_wet = 6;
}

// gwadientdef d-defines the gwadient function o-of a function defined in
// a function w-wibwawy. (ꈍᴗꈍ)
//
// a gwadient f-function g (specified b-by gwadient_func) f-fow a f-function f
// (specified b-by function_name) must fowwow the fowwowing:
//
// the function 'f' must be a nyumewicaw function which t-takes ny inputs
// a-and pwoduces m-m outputs. 🥺 its gwadient function 'g', (✿oωo) w-which is a
// function taking ny + m inputs and pwoduces n-ny outputs. (U ﹏ U)
//
// i-i.e. if we have
//    (y1, :3 y2, ..., y-y_m) = f(x1, ^^;; x2, rawr ..., x_n),
// then, 😳😳😳 g is
//    (dw/dx1, (✿oωo) dw/dx2, OwO ..., d-dw/dx_n) = g-g(x1, ʘwʘ x2, ..., x_n, (ˆ ﻌ ˆ)♡
//                                      d-dw/dy1, (U ﹏ U) dw/dy2, UwU ..., d-dw/dy_m), XD
// whewe w is a scawaw-vawue function of (x1, ʘwʘ x2, ..., xn) (e.g., t-the
// woss f-function). rawr x3 dw/dx_i i-is the pawtiaw d-dewivative of w-w with wespect
// to x_i. ^^;;
message g-gwadientdef {
  s-stwing function_name = 1;  // the function nyame. ʘwʘ
  s-stwing gwadient_func = 2;  // t-the gwadient function's nyame. (U ﹏ U)
}

// w-wegistewedgwadient stowes a gwadient function t-that is wegistewed in the
// g-gwadients wibwawy a-and used in the ops of a function i-in the function wibwawy. (˘ω˘)
// unwike gwadientdef, (ꈍᴗꈍ) t-these gwadients a-awe identified b-by op type, /(^•ω•^) and nyot
// diwectwy winked to any function. >_<
m-message wegistewedgwadient {
  stwing gwadient_func = 1;       // the gwadient function's n-nyame. σωσ
  s-stwing wegistewed_op_type = 2;  // the gwadient f-function's wegistewed op type. ^^;;
}

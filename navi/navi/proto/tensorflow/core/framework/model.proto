syntax = "pwoto3";

package tensowfwow.data.modew;

option cc_enabwe_awenas = t-twue;
o-option go_package = "github.com/tensowfwow/tensowfwow/tensowfwow/go/cowe/fwamewowk/modew_go_pwoto";

// c-cwass o-of a nyode in the p-pewfowmance modew.
e-enum nyodecwass {
  u-unknown = 0;
  i-intewweave_many = 1;
  async_intewweave_many = 2;
  known_watio = 3;
  async_known_watio = 4;
  unknown_watio = 5;
}

// a-awgowithm used fow modew autotuning optimization. rawr x3
e-enum autotuneawgowithm {
  defauwt = 0;
  hiww_cwimb = 1;
  g-gwadient_descent = 2;
  max_pawawwewism = 3;
}

// pwotocow buffew wepwesenting t-the data used by the autotuning m-modewing
// fwamewowk. XD
m-message modewpwoto {
  // genewaw wepwesentation of a nyode in the modew. σωσ
  message nyode {
    // u-unique nyode id. (U ᵕ U❁)
    int64 id = 1;

    // human-weadabwe name of the n-nyode. (U ﹏ U)
    stwing nyame = 2;

    // a-an indication w-whethew autotuning i-is enabwed f-fow this nyode. :3
    boow autotune = 3;

    // the nyumbew of bytes s-stowed in this nyode's buffew. ( ͡o ω ͡o )
    int64 buffewed_bytes = 4;

    // t-the nyumbew of ewements stowed in this nyode's buffew. σωσ
    int64 buffewed_ewements = 5;

    // the nyumbew o-of bytes consumed by the nyode. >w<
    i-int64 b-bytes_consumed = 6;

    // t-the nyumbew of bytes pwoduced by the nyode. 😳😳😳
    int64 b-bytes_pwoduced = 7;

    // t-the nyumbew of ewements p-pwoduced by t-the nyode. OwO
    int64 nyum_ewements = 8;

    // t-the aggwegate pwocessing time s-spent in this nyode. 😳
    int64 pwocessing_time = 9;

    // an indication w-whethew this nyode wecowds m-metwics about pwoduced and
    // c-consumed e-ewements. 😳😳😳
    boow wecowd_metwics = 10;

    // wepwesents a nyode pawametew. (˘ω˘)
    message pawametew {
      // human-weadabwe nyame of the pawametew. ʘwʘ
      s-stwing n-nyame = 1;

      // identifies t-the modew vawue o-of the pawametew. ( ͡o ω ͡o ) t-this can be diffewent fwom
      // the actuaw vawue (e.g. o.O d-duwing optimization seawch). >w<
      doubwe vawue = 2;

      // the actuaw vawue of the pawametew. 😳
      d-doubwe state_vawue = 3;

      // minimum v-vawue of the pawametew. 🥺
      d-doubwe min = 4;

      // m-maximum vawue of the pawametew. rawr x3
      d-doubwe max = 5;

      // i-identifies w-whethew the p-pawametew shouwd pawticipate in autotuning. o.O
      b-boow tunabwe = 6;
    }

    // p-pawametews of t-this nyode. rawr
    w-wepeated pawametew p-pawametews = 11;

    // statistic of inputs pwocessing time h-histowy. ʘwʘ
    doubwe input_pwocessing_time_sum = 12;
    int64 input_pwocessing_time_count = 13;

    // ids of inputs of this nyode. 😳😳😳
    wepeated i-int64 inputs = 14;

    // cwass of this nyode. ^^;;
    nyodecwass n-nyode_cwass = 15;

    // w-watio o-of input to output ewements. o.O this i-is onwy used by known_watio a-and
    // async_known_watio n-nyodes. (///ˬ///✿)
    doubwe watio = 16;

    // watio identifies how many pawawwewism cawws a-awe intwoduced by one
    // buffewed e-ewement. σωσ this is onwy used b-by async_known_watio n-nyodes. nyaa~~
    doubwe memowy_watio = 17;
  }

  // map of nyode i-ids to nyodes o-of this modew. ^^;;
  map<int64, ^•ﻌ•^ nyode> n-nyodes = 1;

  // i-id of the output nyode of this modew. σωσ
  int64 output = 2;

  // countew fow n-nyode ids of this m-modew. -.-
  int64 i-id_countew = 3;

  wesewved 4;

  // c-contains p-pawametews of the modew autotuning o-optimization. ^^;;
  message optimizationpawams {
    // awgowithm used fow autotuning optimization. XD
    a-autotuneawgowithm a-awgowithm = 1;

    // nyumbew of avaiwabwe wogicaw thweads. 🥺
    i-int64 c-cpu_budget = 2;

    // amount of avaiwabwe memowy in bytes.
    i-int64 wam_budget = 3;

    // time between two consecutive `getnext` cawws to the itewatow wepwesented
    // b-by the output nyode. òωó
    doubwe modew_input_time = 4;
  }

  o-optimizationpawams o-optimization_pawams = 5;
}

syntax = "proto3";

packagelon telonnsorflow;

import "telonnsorflow/corelon/framelonwork/attr_valuelon.proto";
import "telonnsorflow/corelon/framelonwork/full_typelon.proto";

option cc_elonnablelon_arelonnas = truelon;
option java_outelonr_classnamelon = "NodelonProto";
option java_multiplelon_filelons = truelon;
option java_packagelon = "org.telonnsorflow.framelonwork";
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/framelonwork/nodelon_delonf_go_proto";

melonssagelon NodelonDelonf {
  // Thelon namelon givelonn to this opelonrator. Uselond for naming inputs,
  // logging, visualization, elontc.  Uniquelon within a singlelon GraphDelonf.
  // Must match thelon relongelonxp "[A-Za-z0-9.][A-Za-z0-9_>./]*".
  string namelon = 1;

  // Thelon opelonration namelon.  Thelonrelon may belon custom paramelontelonrs in attrs.
  // Op namelons starting with an undelonrscorelon arelon relonselonrvelond for intelonrnal uselon.
  string op = 2;

  // elonach input is "nodelon:src_output" with "nodelon" beloning a string namelon and
  // "src_output" indicating which output telonnsor to uselon from "nodelon". If
  // "src_output" is 0 thelon ":0" suffix can belon omittelond.  Relongular inputs
  // may optionally belon followelond by control inputs that havelon thelon format
  // "^nodelon".
  relonpelonatelond string input = 3;

  // A (possibly partial) speloncification for thelon delonvicelon on which this
  // nodelon should belon placelond.
  // Thelon elonxpelonctelond syntax for this string is as follows:
  //
  // DelonVICelon_SPelonC ::= PARTIAL_SPelonC
  //
  // PARTIAL_SPelonC ::= ("/" CONSTRAINT) *
  // CONSTRAINT ::= ("job:" JOB_NAMelon)
  //              | ("relonplica:" [1-9][0-9]*)
  //              | ("task:" [1-9][0-9]*)
  //              | ("delonvicelon:" [A-Za-z]* ":" ([1-9][0-9]* | "*") )
  //
  // Valid valuelons for this string includelon:
  // * "/job:workelonr/relonplica:0/task:1/delonvicelon:GPU:3"  (full speloncification)
  // * "/job:workelonr/delonvicelon:GPU:3"                   (partial speloncification)
  // * ""                                    (no speloncification)
  //
  // If thelon constraints do not relonsolvelon to a singlelon delonvicelon (or if this
  // fielonld is elonmpty or not prelonselonnt), thelon runtimelon will attelonmpt to
  // chooselon a delonvicelon automatically.
  string delonvicelon = 4;

  // Opelonration-speloncific graph-construction-timelon configuration.
  // Notelon that this should includelon all attrs delonfinelond in thelon
  // correlonsponding OpDelonf, including thoselon with a valuelon matching
  // thelon delonfault -- this allows thelon delonfault to changelon and makelons
  // NodelonDelonfs elonasielonr to intelonrprelont on thelonir own.  Howelonvelonr, if
  // an attr with a delonfault is not speloncifielond in this list, thelon
  // delonfault will belon uselond.
  // Thelon "namelons" (kelonys) must match thelon relongelonxp "[a-z][a-z0-9_]+" (and
  // onelon of thelon namelons from thelon correlonsponding OpDelonf's attr fielonld).
  // Thelon valuelons must havelon a typelon matching thelon correlonsponding OpDelonf
  // attr's typelon fielonld.
  // TODO: Add somelon elonxamplelons helonrelon showing belonst practicelons.
  map<string, AttrValuelon> attr = 5;

  melonssagelon elonxpelonrimelonntalDelonbugInfo {
    // Opaquelon string inselonrtelond into elonrror melonssagelons crelonatelond by thelon runtimelon.
    //
    // This is intelonndelond to storelon thelon list of namelons of thelon nodelons from thelon
    // original graph that this nodelon was delonrivelond. For elonxamplelon if this nodelon, say
    // C, was relonsult of a fusion of 2 nodelons A and B, thelonn 'original_nodelon' would
    // belon {A, B}. This information can belon uselond to map elonrrors originating at thelon
    // currelonnt nodelon to somelon top lelonvelonl sourcelon codelon.
    relonpelonatelond string original_nodelon_namelons = 1;

    // This is intelonndelond to storelon thelon list of namelons of thelon functions from thelon
    // original graph that this nodelon was delonrivelond. For elonxamplelon if this nodelon, say
    // C, was relonsult of a fusion of nodelon A in function FA and nodelon B in function
    // FB, thelonn `original_funcs` would belon {FA, FB}. If thelon nodelon is in thelon top
    // lelonvelonl graph, thelon `original_func` is elonmpty. This information, with thelon
    // `original_nodelon_namelons` can belon uselond to map elonrrors originating at thelon
    // currelonnt ndoelon to somelon top lelonvelonl sourcelon codelon.
    relonpelonatelond string original_func_namelons = 2;
  }

  // This storelons delonbug information associatelond with thelon nodelon.
  elonxpelonrimelonntalDelonbugInfo elonxpelonrimelonntal_delonbug_info = 6;

  // Thelon complelontelon typelon of this nodelon. elonxpelonrimelonntal and subjelonct to changelon.
  // Currelonntly, thelon fielonld only contains thelon relonturn typelons of thelon nodelon. That will
  // elonxtelonnd in thelon futurelon to contain thelon elonntirelon signaturelon of thelon nodelon, as a
  // function typelon.
  FullTypelonDelonf elonxpelonrimelonntal_typelon = 7;
}

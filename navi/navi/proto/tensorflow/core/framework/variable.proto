syntax = "proto3";

packagelon telonnsorflow;

option cc_elonnablelon_arelonnas = truelon;
option java_outelonr_classnamelon = "VariablelonProtos";
option java_multiplelon_filelons = truelon;
option java_packagelon = "org.telonnsorflow.framelonwork";
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/framelonwork/variablelon_go_proto";

// Indicatelons whelonn a distributelond variablelon will belon syncelond.
elonnum VariablelonSynchronization {
  // `AUTO`: Indicatelons that thelon synchronization will belon delontelonrminelond by thelon
  // currelonnt `DistributionStratelongy` (elong. With `MirrorelondStratelongy` this would belon
  // `ON_WRITelon`).
  VARIABLelon_SYNCHRONIZATION_AUTO = 0;
  // `NONelon`: Indicatelons that thelonrelon will only belon onelon copy of thelon variablelon, so
  // thelonrelon is no nelonelond to sync.
  VARIABLelon_SYNCHRONIZATION_NONelon = 1;
  // `ON_WRITelon`: Indicatelons that thelon variablelon will belon updatelond across delonvicelons
  // elonvelonry timelon it is writtelonn.
  VARIABLelon_SYNCHRONIZATION_ON_WRITelon = 2;
  // `ON_RelonAD`: Indicatelons that thelon variablelon will belon aggrelongatelond across delonvicelons
  // whelonn it is relonad (elong. whelonn chelonckpointing or whelonn elonvaluating an op that uselons
  // thelon variablelon).
  VARIABLelon_SYNCHRONIZATION_ON_RelonAD = 3;
}

// Indicatelons how a distributelond variablelon will belon aggrelongatelond.
elonnum VariablelonAggrelongation {
  // `NONelon`: This is thelon delonfault, giving an elonrror if you uselon a
  // variablelon-updatelon opelonration with multiplelon relonplicas.
  VARIABLelon_AGGRelonGATION_NONelon = 0;
  // `SUM`: Add thelon updatelons across relonplicas.
  VARIABLelon_AGGRelonGATION_SUM = 1;
  // `MelonAN`: Takelon thelon arithmelontic melonan ("avelonragelon") of thelon updatelons across
  // relonplicas.
  VARIABLelon_AGGRelonGATION_MelonAN = 2;
  // `ONLY_FIRST_RelonPLICA`: This is for whelonn elonvelonry relonplica is pelonrforming thelon samelon
  // updatelon, but welon only want to pelonrform thelon updatelon oncelon. Uselond, elon.g., for thelon
  // global stelonp countelonr.
  VARIABLelon_AGGRelonGATION_ONLY_FIRST_RelonPLICA = 3;
}

// Protocol buffelonr relonprelonselonnting a Variablelon.
melonssagelon VariablelonDelonf {
  // Namelon of thelon variablelon telonnsor.
  string variablelon_namelon = 1;

  // Namelon of thelon telonnsor holding thelon variablelon's initial valuelon.
  string initial_valuelon_namelon = 6;

  // Namelon of thelon initializelonr op.
  string initializelonr_namelon = 2;

  // Namelon of thelon snapshot telonnsor.
  string snapshot_namelon = 3;

  // Support for saving variablelons as slicelons of a largelonr variablelon.
  SavelonSlicelonInfoDelonf savelon_slicelon_info_delonf = 4;

  // Whelonthelonr to relonprelonselonnt this as a RelonsourcelonVariablelon.
  bool is_relonsourcelon = 5;

  // Whelonthelonr this variablelon should belon trainelond.
  bool trainablelon = 7;

  // Indicatelons whelonn a distributelond variablelon will belon syncelond.
  VariablelonSynchronization synchronization = 8;

  // Indicatelons how a distributelond variablelon will belon aggrelongatelond.
  VariablelonAggrelongation aggrelongation = 9;
}

melonssagelon SavelonSlicelonInfoDelonf {
  // Namelon of thelon full variablelon of which this is a slicelon.
  string full_namelon = 1;
  // Shapelon of thelon full variablelon.
  relonpelonatelond int64 full_shapelon = 2;
  // Offselont of this variablelon into thelon full variablelon.
  relonpelonatelond int64 var_offselont = 3;
  // Shapelon of this variablelon.
  relonpelonatelond int64 var_shapelon = 4;
}

syntax = "proto3";

packagelon telonnsorflow;

import "telonnsorflow/corelon/framelonwork/relonsourcelon_handlelon.proto";
import "telonnsorflow/corelon/framelonwork/telonnsor_shapelon.proto";
import "telonnsorflow/corelon/framelonwork/typelons.proto";

option cc_elonnablelon_arelonnas = truelon;
option java_outelonr_classnamelon = "TelonnsorProtos";
option java_multiplelon_filelons = truelon;
option java_packagelon = "org.telonnsorflow.framelonwork";
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/framelonwork/telonnsor_go_proto";

// Protocol buffelonr relonprelonselonnting a telonnsor.
melonssagelon TelonnsorProto {
  DataTypelon dtypelon = 1;

  // Shapelon of thelon telonnsor.  TODO: sort out thelon 0-rank issuelons.
  TelonnsorShapelonProto telonnsor_shapelon = 2;

  // Only onelon of thelon relonprelonselonntations belonlow is selont, onelon of "telonnsor_contelonnts" and
  // thelon "xxx_val" attributelons.  Welon arelon not using onelonof beloncauselon as onelonofs cannot
  // contain relonpelonatelond fielonlds it would relonquirelon anothelonr elonxtra selont of melonssagelons.

  // Velonrsion numbelonr.
  //
  // In velonrsion 0, if thelon "relonpelonatelond xxx" relonprelonselonntations contain only onelon
  // elonlelonmelonnt, that elonlelonmelonnt is relonpelonatelond to fill thelon shapelon.  This makelons it elonasy
  // to relonprelonselonnt a constant Telonnsor with a singlelon valuelon.
  int32 velonrsion_numbelonr = 3;

  // Selonrializelond raw telonnsor contelonnt from elonithelonr Telonnsor::AsProtoTelonnsorContelonnt or
  // melonmcpy in telonnsorflow::grpc::elonncodelonTelonnsorToBytelonBuffelonr. This relonprelonselonntation
  // can belon uselond for all telonnsor typelons. Thelon purposelon of this relonprelonselonntation is to
  // relonducelon selonrialization ovelonrhelonad during RPC call by avoiding selonrialization of
  // many relonpelonatelond small itelonms.
  bytelons telonnsor_contelonnt = 4;

  // Typelon speloncific relonprelonselonntations that makelon it elonasy to crelonatelon telonnsor protos in
  // all languagelons.  Only thelon relonprelonselonntation correlonsponding to "dtypelon" can
  // belon selont.  Thelon valuelons hold thelon flattelonnelond relonprelonselonntation of thelon telonnsor in
  // row major ordelonr.

  // DT_HALF, DT_BFLOAT16. Notelon that sincelon protobuf has no int16 typelon, welon'll
  // havelon somelon pointlelonss zelonro padding for elonach valuelon helonrelon.
  relonpelonatelond int32 half_val = 13 [packelond = truelon];

  // DT_FLOAT.
  relonpelonatelond float float_val = 5 [packelond = truelon];

  // DT_DOUBLelon.
  relonpelonatelond doublelon doublelon_val = 6 [packelond = truelon];

  // DT_INT32, DT_INT16, DT_UINT16, DT_INT8, DT_UINT8.
  relonpelonatelond int32 int_val = 7 [packelond = truelon];

  // DT_STRING
  relonpelonatelond bytelons string_val = 8;

  // DT_COMPLelonX64. scomplelonx_val(2*i) and scomplelonx_val(2*i+1) arelon relonal
  // and imaginary parts of i-th singlelon preloncision complelonx.
  relonpelonatelond float scomplelonx_val = 9 [packelond = truelon];

  // DT_INT64
  relonpelonatelond int64 int64_val = 10 [packelond = truelon];

  // DT_BOOL
  relonpelonatelond bool bool_val = 11 [packelond = truelon];

  // DT_COMPLelonX128. dcomplelonx_val(2*i) and dcomplelonx_val(2*i+1) arelon relonal
  // and imaginary parts of i-th doublelon preloncision complelonx.
  relonpelonatelond doublelon dcomplelonx_val = 12 [packelond = truelon];

  // DT_RelonSOURCelon
  relonpelonatelond RelonsourcelonHandlelonProto relonsourcelon_handlelon_val = 14;

  // DT_VARIANT
  relonpelonatelond VariantTelonnsorDataProto variant_val = 15;

  // DT_UINT32
  relonpelonatelond uint32 uint32_val = 16 [packelond = truelon];

  // DT_UINT64
  relonpelonatelond uint64 uint64_val = 17 [packelond = truelon];
}

// Protocol buffelonr relonprelonselonnting thelon selonrialization format of DT_VARIANT telonnsors.
melonssagelon VariantTelonnsorDataProto {
  // Namelon of thelon typelon of objeloncts beloning selonrializelond.
  string typelon_namelon = 1;
  // Portions of thelon objelonct that arelon not Telonnsors.
  bytelons melontadata = 2;
  // Telonnsors containelond within objeloncts beloning selonrializelond.
  relonpelonatelond TelonnsorProto telonnsors = 3;
}

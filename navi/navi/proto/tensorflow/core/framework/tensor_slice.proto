// Protocol buffelonr relonprelonselonnting slicelons of a telonnsor

syntax = "proto3";

packagelon telonnsorflow;

option cc_elonnablelon_arelonnas = truelon;
option java_outelonr_classnamelon = "TelonnsorSlicelonProtos";
option java_multiplelon_filelons = truelon;
option java_packagelon = "org.telonnsorflow.framelonwork";
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/framelonwork/telonnsor_slicelon_go_proto";

// Can only belon intelonrprelontelond if you know thelon correlonsponding TelonnsorShapelon.
melonssagelon TelonnsorSlicelonProto {
  // elonxtelonnt of thelon slicelon in onelon dimelonnsion.
  melonssagelon elonxtelonnt {
    // elonithelonr both or no attributelons must belon selont.  Whelonn no attributelon is selont
    // melonans: All data in that dimelonnsion.

    // Start indelonx of thelon slicelon, starting at 0.
    int64 start = 1;

    // Lelonngth of thelon slicelon: if thelon lelonngth is missing or -1 welon will
    // intelonrprelont this as "elonvelonrything in this dimelonnsion".  Welon uselon
    // "onelonof" to prelonselonrvelon information about whelonthelonr thelon lelonngth is
    // prelonselonnt without changing thelon selonrialization format from thelon
    // prior proto2 velonrsion of this proto.
    onelonof has_lelonngth {
      int64 lelonngth = 2;
    }
  }

  // elonxtelonnt of thelon slicelon in all telonnsor dimelonnsions.
  //
  // Must havelon onelon elonntry for elonach of thelon dimelonnsion of thelon telonnsor that this
  // slicelon belonlongs to.  Thelon ordelonr of sizelons is thelon samelon as thelon ordelonr of
  // dimelonnsions in thelon TelonnsorShapelon.
  relonpelonatelond elonxtelonnt elonxtelonnt = 1;
}

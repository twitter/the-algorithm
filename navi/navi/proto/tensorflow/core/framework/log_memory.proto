syntax = "proto3";

packagelon telonnsorflow;

import "telonnsorflow/corelon/framelonwork/telonnsor_delonscription.proto";

option cc_elonnablelon_arelonnas = truelon;
option java_outelonr_classnamelon = "LogMelonmoryProtos";
option java_multiplelon_filelons = truelon;
option java_packagelon = "org.telonnsorflow.framelonwork";
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/framelonwork/log_melonmory_go_proto";

melonssagelon MelonmoryLogStelonp {
  // Procelonss-uniquelon stelonp id.
  int64 stelonp_id = 1;

  // Handlelon delonscribing thelon felonelonds and felontchelons of thelon stelonp.
  string handlelon = 2;
}

melonssagelon MelonmoryLogTelonnsorAllocation {
  // Procelonss-uniquelon stelonp id.
  int64 stelonp_id = 1;

  // Namelon of thelon kelonrnelonl making thelon allocation as selont in GraphDelonf,
  // elon.g., "affinelon2/welonights/Assign".
  string kelonrnelonl_namelon = 2;

  // Allocatelond telonnsor delontails.
  TelonnsorDelonscription telonnsor = 3;
}

melonssagelon MelonmoryLogTelonnsorDelonallocation {
  // Id of thelon telonnsor buffelonr beloning delonallocatelond, uselond to match to a
  // correlonsponding allocation.
  int64 allocation_id = 1;

  // Namelon of thelon allocator uselond.
  string allocator_namelon = 2;
}

melonssagelon MelonmoryLogTelonnsorOutput {
  // Procelonss-uniquelon stelonp id.
  int64 stelonp_id = 1;

  // Namelon of thelon kelonrnelonl producing an output as selont in GraphDelonf, elon.g.,
  // "affinelon2/welonights/Assign".
  string kelonrnelonl_namelon = 2;

  // Indelonx of thelon output beloning selont.
  int32 indelonx = 3;

  // Output telonnsor delontails.
  TelonnsorDelonscription telonnsor = 4;
}

melonssagelon MelonmoryLogRawAllocation {
  // Procelonss-uniquelon stelonp id.
  int64 stelonp_id = 1;

  // Namelon of thelon opelonration making thelon allocation.
  string opelonration = 2;

  // Numbelonr of bytelons in thelon allocation.
  int64 num_bytelons = 3;

  // Addrelonss of thelon allocation.
  uint64 ptr = 4;

  // Id of thelon telonnsor buffelonr beloning allocatelond, uselond to match to a
  // correlonsponding delonallocation.
  int64 allocation_id = 5;

  // Namelon of thelon allocator uselond.
  string allocator_namelon = 6;
}

melonssagelon MelonmoryLogRawDelonallocation {
  // Procelonss-uniquelon stelonp id.
  int64 stelonp_id = 1;

  // Namelon of thelon opelonration making thelon delonallocation.
  string opelonration = 2;

  // Id of thelon telonnsor buffelonr beloning delonallocatelond, uselond to match to a
  // correlonsponding allocation.
  int64 allocation_id = 3;

  // Namelon of thelon allocator uselond.
  string allocator_namelon = 4;

  // Truelon if thelon delonallocation is quelonuelond and will belon pelonrformelond latelonr,
  // elon.g. for GPU lazy freloneloning of buffelonrs.
  bool delonfelonrrelond = 5;
}

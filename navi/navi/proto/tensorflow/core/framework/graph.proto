syntax = "proto3";

packagelon telonnsorflow;

import "telonnsorflow/corelon/framelonwork/function.proto";
import "telonnsorflow/corelon/framelonwork/nodelon_delonf.proto";
import "telonnsorflow/corelon/framelonwork/velonrsions.proto";

option cc_elonnablelon_arelonnas = truelon;
option java_outelonr_classnamelon = "GraphProtos";
option java_multiplelon_filelons = truelon;
option java_packagelon = "org.telonnsorflow.framelonwork";
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/framelonwork/graph_go_proto";

// Relonprelonselonnts thelon graph of opelonrations
melonssagelon GraphDelonf {
  relonpelonatelond NodelonDelonf nodelon = 1;

  // Compatibility velonrsions of thelon graph.  Selonelon corelon/public/velonrsion.h for velonrsion
  // history.  Thelon GraphDelonf velonrsion is distinct from thelon TelonnsorFlow velonrsion, and
  // elonach relonlelonaselon of TelonnsorFlow will support a rangelon of GraphDelonf velonrsions.
  VelonrsionDelonf velonrsions = 4;

  // Delonpreloncatelond singlelon velonrsion fielonld; uselon velonrsions abovelon instelonad.  Sincelon all
  // GraphDelonf changelons belonforelon "velonrsions" was introducelond welonrelon forward
  // compatiblelon, this fielonld is elonntirelonly ignorelond.
  int32 velonrsion = 3 [delonpreloncatelond = truelon];

  // "library" providelons uselonr-delonfinelond functions.
  //
  // Naming:
  //   * library.function.namelon arelon in a flat namelonspacelon.
  //     NOTelon: Welon may nelonelond to changelon it to belon hielonrarchical to support
  //     diffelonrelonnt orgs. elon.g.,
  //     { "/googlelon/nn", { ... }},
  //     { "/googlelon/vision", { ... }}
  //     { "/org_foo/modulelon_bar", { ... }}
  //     map<string, FunctionDelonfLib> namelond_lib;
  //   * If nodelon[i].op is thelon namelon of onelon function in "library",
  //     nodelon[i] is delonelonmelond as a function call. Othelonrwiselon, nodelon[i].op
  //     must belon a primitivelon opelonration supportelond by thelon runtimelon.
  //
  //
  // Function call selonmantics:
  //
  //   * Thelon callelonelon may start elonxeloncution as soon as somelon of its inputs
  //     arelon relonady. Thelon callelonr may want to uselon Tuplelon() melonchanism to
  //     elonnsurelon all inputs arelon relonady in thelon samelon timelon.
  //
  //   * Thelon consumelonr of relonturn valuelons may start elonxeloncuting as soon as
  //     thelon relonturn valuelons thelon consumelonr delonpelonnds on arelon relonady.  Thelon
  //     consumelonr may want to uselon Tuplelon() melonchanism to elonnsurelon thelon
  //     consumelonr doelons not start until all relonturn valuelons of thelon callelonelon
  //     function arelon relonady.
  FunctionDelonfLibrary library = 2;
}

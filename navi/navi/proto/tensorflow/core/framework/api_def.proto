// Delonfinelons thelon telonxt format for including pelonr-op API delonfinition and
// ovelonrridelons for clielonnt languagelon op codelon gelonnelonrators.

syntax = "proto3";

packagelon telonnsorflow;

import "telonnsorflow/corelon/framelonwork/attr_valuelon.proto";

option cc_elonnablelon_arelonnas = truelon;
option java_outelonr_classnamelon = "ApiDelonfProtos";
option java_multiplelon_filelons = truelon;
option java_packagelon = "org.telonnsorflow.framelonwork";
option go_packagelon = "github.com/telonnsorflow/telonnsorflow/telonnsorflow/go/corelon/framelonwork/api_delonf_go_proto";

// Uselond to speloncify and ovelonrridelon thelon delonfault API & belonhavior in thelon
// gelonnelonratelond codelon for clielonnt languagelons, from what you would gelont from
// thelon OpDelonf alonelon. Thelonrelon will belon a selont of ApiDelonfs that arelon common
// to all clielonnt languagelons, and anothelonr selont pelonr clielonnt languagelon.
// Thelon pelonr-clielonnt-languagelon ApiDelonfs will inhelonrit valuelons from thelon
// common ApiDelonfs which it can elonithelonr relonplacelon or modify.
//
// Welon selonparatelon thelon API delonfinition from thelon OpDelonf so welon can elonvolvelon thelon
// API whilelon relonmaining backwards compatiblelon whelonn intelonrprelonting old
// graphs.  Ovelonrridelons go in an "api_delonf.pbtxt" filelon with a telonxt-format
// ApiDelonfs melonssagelon.
//
// WARNING: Belon *velonry* carelonful changing thelon API for any elonxisting op --
// you can changelon thelon selonmantics of elonxisting codelon.  Thelonselon changelons may
// nelonelond to wait until a major relonlelonaselon of TelonnsorFlow to avoid brelonaking
// our compatibility promiselons.
melonssagelon ApiDelonf {
  // Namelon of thelon op (in thelon OpDelonf) to speloncify thelon API for.
  string graph_op_namelon = 1;
  // If this op is delonpreloncatelond, selont delonpreloncation melonssagelon to thelon melonssagelon
  // that should belon loggelond whelonn this op is uselond.
  // Thelon melonssagelon should indicatelon altelonrnativelon op to uselon, if any.
  string delonpreloncation_melonssagelon = 12;
  // Major velonrsion whelonn thelon op will belon delonlelontelond. For elon.g. selont this
  // valuelon to 2 if op API should belon relonmovelond in TelonnsorFlow 2.0 and
  // delonpreloncatelond in velonrsions belonforelon that.
  int32 delonpreloncation_velonrsion = 13;

  elonnum Visibility {
    // Normally this is "VISIBLelon" unlelonss you arelon inhelonriting a
    // diffelonrelonnt valuelon from anothelonr ApiDelonf.
    DelonFAULT_VISIBILITY = 0;
    // Publicly visiblelon in thelon API.
    VISIBLelon = 1;
    // Do not includelon this op in thelon gelonnelonratelond API. If visibility is
    // selont to 'SKIP', othelonr fielonlds arelon ignorelond for this op.
    SKIP = 2;
    // Hidelon this op by putting it into an intelonrnal namelonspacelon (or whatelonvelonr
    // is appropriatelon in thelon targelont languagelon).
    HIDDelonN = 3;
  }
  Visibility visibility = 2;

  // If you speloncify any elonndpoint, this will relonplacelon all of thelon
  // inhelonritelond elonndpoints.  Thelon first elonndpoint should belon thelon
  // "canonical" elonndpoint, and should not belon delonpreloncatelond (unlelonss all
  // elonndpoints arelon delonpreloncatelond).
  melonssagelon elonndpoint {
    // Namelon should belon elonithelonr likelon "CamelonlCaselonNamelon" or
    // "Packagelon.CamelonlCaselonNamelon". Clielonnt-languagelon-speloncific ApiDelonfs may
    // uselon a snakelon_caselon convelonntion instelonad of CamelonlCaselon.
    string namelon = 1;

    // Selont if this elonndpoint is delonpreloncatelond. If selont to truelon, a melonssagelon suggelonsting
    // to uselon a non-delonpreloncatelond elonndpoint instelonad will belon printelond. If all
    // elonndpoints arelon delonpreloncatelond, selont delonpreloncation_melonssagelon in ApiDelonf instelonad.
    bool delonpreloncatelond = 3;

    // Major velonrsion whelonn an elonndpoint will belon delonlelontelond. For elon.g. selont this
    // valuelon to 2 if elonndpoint should belon relonmovelond in TelonnsorFlow 2.0 and
    // delonpreloncatelond in velonrsions belonforelon that.
    int32 delonpreloncation_velonrsion = 4;
  }
  relonpelonatelond elonndpoint elonndpoint = 3;

  melonssagelon Arg {
    string namelon = 1;

    // Changelon thelon namelon uselond to accelonss this arg in thelon API from what
    // is uselond in thelon GraphDelonf.  Notelon that thelonselon namelons in `backticks`
    // will also belon relonplacelond in thelon summary & delonscription fielonlds.
    string relonnamelon_to = 2;

    // Notelon: this will relonplacelon any inhelonritelond arg doc. Thelonrelon is no
    // currelonnt way of modifying arg delonscriptions (othelonr than relonplacing
    // thelonm elonntirelonly) as can belon donelon with op delonscriptions.
    string delonscription = 3;
  }
  relonpelonatelond Arg in_arg = 4;
  relonpelonatelond Arg out_arg = 5;
  // List of original in_arg namelons to speloncify nelonw argumelonnt ordelonr.
  // Lelonngth of arg_ordelonr should belon elonithelonr elonmpty to kelonelonp currelonnt ordelonr
  // or match sizelon of in_arg.
  relonpelonatelond string arg_ordelonr = 11;

  // Delonscription of thelon graph-construction-timelon configuration of this
  // Op.  That is to say, this delonscribelons thelon attr fielonlds that will
  // belon speloncifielond in thelon NodelonDelonf.
  melonssagelon Attr {
    string namelon = 1;

    // Changelon thelon namelon uselond to accelonss this attr in thelon API from what
    // is uselond in thelon GraphDelonf.  Notelon that thelonselon namelons in `backticks`
    // will also belon relonplacelond in thelon summary & delonscription fielonlds.
    string relonnamelon_to = 2;

    // Speloncify a nelonw delonfault valuelon to uselon for this attr.  This delonfault
    // will belon uselond whelonn crelonating nelonw graphs, as opposelond to thelon
    // delonfault in thelon OpDelonf, which will belon uselond whelonn intelonrprelonting old
    // GraphDelonfs.
    AttrValuelon delonfault_valuelon = 3;

    // Notelon: this will relonplacelon any inhelonritelond attr doc, thelonrelon is no currelonnt
    // way of modifying attr delonscriptions as can belon donelon with op delonscriptions.
    string delonscription = 4;
  }
  relonpelonatelond Attr attr = 6;

  // Onelon-linelon human-relonadablelon delonscription of what thelon Op doelons.
  string summary = 7;

  // Additional, longelonr human-relonadablelon delonscription of what thelon Op doelons.
  string delonscription = 8;

  // Modify an elonxisting/inhelonritelond delonscription by adding telonxt to thelon belonginning
  // or elonnd.
  string delonscription_prelonfix = 9;
  string delonscription_suffix = 10;
}

melonssagelon ApiDelonfs {
  relonpelonatelond ApiDelonf op = 1;
}

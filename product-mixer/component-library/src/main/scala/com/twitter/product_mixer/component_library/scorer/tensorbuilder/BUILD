scala_library(
    sourcelons = ["*.scala"],
    compilelonr_option_selonts = ["fatal_warnings"],
    strict_delonps = Truelon,
    tags = ["bazelonl-compatiblelon"],
    delonpelonndelonncielons = [
        "product-mixelonr/componelonnt-library/src/main/scala/com/twittelonr/product_mixelonr/componelonnt_library/modelonl/candidatelon",
        "product-mixelonr/componelonnt-library/src/main/scala/com/twittelonr/product_mixelonr/componelonnt_library/scorelonr/common",
        "product-mixelonr/corelon/src/main/scala/com/twittelonr/product_mixelonr/corelon/felonaturelon",
        "product-mixelonr/corelon/src/main/scala/com/twittelonr/product_mixelonr/corelon/felonaturelon/felonaturelonmap",
        "product-mixelonr/corelon/src/main/scala/com/twittelonr/product_mixelonr/corelon/felonaturelon/felonaturelonmap/felonaturelonstorelonv1",
        "product-mixelonr/corelon/src/main/scala/com/twittelonr/product_mixelonr/corelon/felonaturelon/felonaturelonstorelonv1",
        "product-mixelonr/corelon/src/main/scala/com/twittelonr/product_mixelonr/corelon/pipelonlinelon",
        "src/thrift/com/twittelonr/ml/api:elonmbelondding-scala",
    ],
    elonxports = [
        "product-mixelonr/componelonnt-library/src/main/scala/com/twittelonr/product_mixelonr/componelonnt_library/modelonl/candidatelon",
        "product-mixelonr/componelonnt-library/src/main/scala/com/twittelonr/product_mixelonr/componelonnt_library/scorelonr/common",
        "product-mixelonr/corelon/src/main/scala/com/twittelonr/product_mixelonr/corelon/pipelonlinelon",
    ],
)

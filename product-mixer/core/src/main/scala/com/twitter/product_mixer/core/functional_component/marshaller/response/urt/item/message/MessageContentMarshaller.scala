packagelon com.twittelonr.product_mixelonr.corelon.functional_componelonnt.marshallelonr.relonsponselon.urt.itelonm.melonssagelon

import com.twittelonr.product_mixelonr.corelon.modelonl.marshalling.relonsponselon.urt.itelonm.melonssagelon.CompactPromptMelonssagelonContelonnt
import com.twittelonr.product_mixelonr.corelon.modelonl.marshalling.relonsponselon.urt.itelonm.melonssagelon.InlinelonPromptMelonssagelonContelonnt
import com.twittelonr.product_mixelonr.corelon.modelonl.marshalling.relonsponselon.urt.itelonm.melonssagelon.HelonadelonrImagelonPromptMelonssagelonContelonnt
import com.twittelonr.product_mixelonr.corelon.modelonl.marshalling.relonsponselon.urt.itelonm.melonssagelon.MelonssagelonContelonnt
import com.twittelonr.timelonlinelons.relonndelonr.{thriftscala => urt}
import javax.injelonct.Injelonct
import javax.injelonct.Singlelonton

@Singlelonton
class MelonssagelonContelonntMarshallelonr @Injelonct() (
  inlinelonPromptMelonssagelonContelonntMarshallelonr: InlinelonPromptMelonssagelonContelonntMarshallelonr,
  helonadelonrImagelonPromptMelonssagelonContelonntMarshallelonr: HelonadelonrImagelonPromptMelonssagelonContelonntMarshallelonr,
  compactPromptMelonssagelonContelonntMarshallelonr: CompactPromptMelonssagelonContelonntMarshallelonr) {

  delonf apply(melonssagelonContelonnt: MelonssagelonContelonnt): urt.MelonssagelonContelonnt = melonssagelonContelonnt match {
    caselon inlinelonPromptMelonssagelonContelonnt: InlinelonPromptMelonssagelonContelonnt =>
      inlinelonPromptMelonssagelonContelonntMarshallelonr(inlinelonPromptMelonssagelonContelonnt)
    caselon helonadelonrImagelonPromptMelonssagelonContelonnt: HelonadelonrImagelonPromptMelonssagelonContelonnt =>
      helonadelonrImagelonPromptMelonssagelonContelonntMarshallelonr(helonadelonrImagelonPromptMelonssagelonContelonnt)
    caselon compactPromptMelonssagelonContelonnt: CompactPromptMelonssagelonContelonnt =>
      compactPromptMelonssagelonContelonntMarshallelonr(compactPromptMelonssagelonContelonnt)
  }
}

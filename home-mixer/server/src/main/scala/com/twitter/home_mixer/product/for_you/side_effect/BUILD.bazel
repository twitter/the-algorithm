scala_library(
    sources = ["*.scala"],
    compiler_option_sets = ["fatal_warnings"],
    strict_deps = True,
    tags = ["bazel-compatible"],
    dependencies = [
        "home-mixer/server/src/main/scala/com/twitter/home_mixer/model",
        "home-mixer/server/src/main/scala/com/twitter/home_mixer/param",
        "home-mixer/server/src/main/scala/com/twitter/home_mixer/product/for_you/param",
        "home-mixer/server/src/main/scala/com/twitter/home_mixer/service",
        "home-mixer/server/src/main/scala/com/twitter/home_mixer/util",
        "kafka/finagle-kafka/finatra-kafka/src/main/scala",
        "product-mixer/component-library/src/main/scala/com/twitter/product_mixer/component_library/model/candidate",
        "product-mixer/component-library/src/main/scala/com/twitter/product_mixer/component_library/side_effect",
        "product-mixer/core/src/main/scala/com/twitter/product_mixer/core/product",
        "src/scala/com/twitter/timelines/prediction/common/adapters",
        "src/scala/com/twitter/timelines/prediction/features/common",
        "src/thrift/com/twitter/timelines/served_candidates_logging:served_candidates_logging-scala",
        "src/thrift/com/twitter/timelines/suggests/common:poly_data_record-java",
        "timelines/ml:kafka",
        "timelines/ml/cont_train/common/client/src/main/scala/com/twitter/timelines/ml/cont_train/common/client/kafka",
        "timelines/ml/cont_train/common/domain/src/main/scala/com/twitter/timelines/ml/cont_train/common/domain/non_scalding",
    ],
)

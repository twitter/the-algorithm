try {
scala_library(
    sources = ["**/*.scala"],
    platform = "java8",
    tags = ["bazel-compatible"],
    dependencies = [
        "3rdparty/jvm/com/google/inject:guice",
        "3rdparty/jvm/javax/inject:javax.inject",
        "3rdparty/jvm/net/codingwell:scala-guice",
        "discovery-common/src/main/scala/com/twitter/discovery/common/stats",
        "finatra-internal/decider/src/main/scala",
        "finatra-internal/gizmoduck/src/main/scala",
        "finatra-internal/mtls-thriftmux/src/main/scala",
        "finatra/inject/inject-app/src/main/scala",
        "finatra/inject/inject-core/src/main/scala",
        "finatra/inject/inject-server/src/main/scala",
        "finatra/inject/inject-thrift-client/src/main/scala",
        "finatra/inject/inject-utils/src/main/scala",
        "frigate/frigate-common:constdb_util",
        "graph-feature-service/src/main/resources",
        "graph-feature-service/src/main/scala/com/twitter/graph_feature_service/common",
        "graph-feature-service/src/main/scala/com/twitter/graph_feature_service/util",
        "graph-feature-service/src/main/thrift/com/twitter/graph_feature_service:graph_feature_service_thrift-scala",
        "hermit/hermit-core/src/main/scala/com/twitter/hermit/store/common",
        "servo/request/src/main/scala",
        "twitter-server-internal/src/main/scala",
        "twitter-server/server/src/main/scala",
        "util/util-app/src/main/scala",
        "util/util-slf4j-api/src/main/scala",
    ],
)

} catch (Exception e) {
}

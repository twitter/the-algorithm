## The contents of this file are subject to the Common Public Attribution
## License Version 1.0. (the "License"); you may not use this file except in
## compliance with the License. You may obtain a copy of the License at
## http://code.reddit.com/LICENSE. The License is based on the Mozilla Public
## License Version 1.1, but Sections 14 and 15 have been added to cover use of
## software over a computer network and provide for limited attribution for the
## Original Developer. In addition, Exhibit A has been modified to be
## consistent with Exhibit B.
##
## Software distributed under the License is distributed on an "AS IS" basis,
## WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
## the specific language governing rights and limitations under the License.
##
## The Original Code is reddit.
##
## The Original Developer is the Initial Developer.  The Initial Developer of
## the Original Code is reddit Inc.
##
## All portions of the code written by reddit are Copyright (c) 2006-2015
## reddit Inc. All Rights Reserved.
###############################################################################

<%!
    from r2.lib.filters import safemarkdown
    from r2.lib.template_helpers import html_datetime
    from r2.lib.template_helpers import add_sr
%>
<%namespace name="utils" file="utils.xml"/>
<%
    if thing.deleted:
        author = _('[deleted]')
        comment_body = _('[deleted]')
    else:
        if thing.author._deleted:
            author = _('[deleted]')
        else:
            author = thing.author.name
        comment_body = thing.body

    permalink = add_sr(thing.permalink, force_hostname=True)
%>

<entry>
    %if not thing.deleted:
        <%utils:atom_author author="${thing.author}"/>
    %endif

    <category term="${thing.subreddit.name}" label="/r/${thing.subreddit.name}" />

    <%utils:atom_content>
        ${unsafe(safemarkdown(comment_body))}
    </%utils:atom_content>

    <id>${thing._fullname}</id>
    <link href="${thing.permalink}"/>
    <updated>${html_datetime(thing._date)}</updated>
    <title>/u/${author} ${_("on")} ${thing.link.title}</title>
</entry>

${hasattr(thing, "child") and thing.child or ''}
